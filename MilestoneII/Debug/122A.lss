
122A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000154  00800100  00001144  000011d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001144  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004e  00800254  00800254  0000132c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000132c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000248  00000000  00000000  0000135c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002685  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008a6  00000000  00000000  00003c29  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001bbf  00000000  00000000  000044cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000604  00000000  00000000  00006090  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c1e  00000000  00000000  00006694  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001c23  00000000  00000000  000072b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000268  00000000  00000000  00008ed5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	22 c1       	rjmp	.+580    	; 0x24a <__vector_1>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	0b c6       	rjmp	.+3094   	; 0xc4c <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e0       	ldi	r17, 0x02	; 2
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 e4       	ldi	r30, 0x44	; 68
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a4 35       	cpi	r26, 0x54	; 84
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a4 e5       	ldi	r26, 0x54	; 84
      b6:	b2 e0       	ldi	r27, 0x02	; 2
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a2 3a       	cpi	r26, 0xA2	; 162
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	18 d5       	rcall	.+2608   	; 0xaf4 <main>
      c4:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <vListInsertEnd>:
	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
}
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	fc 01       	movw	r30, r24
      d0:	db 01       	movw	r26, r22
      d2:	21 81       	ldd	r18, Z+1	; 0x01
      d4:	32 81       	ldd	r19, Z+2	; 0x02
      d6:	e9 01       	movw	r28, r18
      d8:	8a 81       	ldd	r24, Y+2	; 0x02
      da:	9b 81       	ldd	r25, Y+3	; 0x03
      dc:	13 96       	adiw	r26, 0x03	; 3
      de:	9c 93       	st	X, r25
      e0:	8e 93       	st	-X, r24
      e2:	12 97       	sbiw	r26, 0x02	; 2
      e4:	81 81       	ldd	r24, Z+1	; 0x01
      e6:	92 81       	ldd	r25, Z+2	; 0x02
      e8:	15 96       	adiw	r26, 0x05	; 5
      ea:	9c 93       	st	X, r25
      ec:	8e 93       	st	-X, r24
      ee:	14 97       	sbiw	r26, 0x04	; 4
      f0:	8a 81       	ldd	r24, Y+2	; 0x02
      f2:	9b 81       	ldd	r25, Y+3	; 0x03
      f4:	ec 01       	movw	r28, r24
      f6:	7d 83       	std	Y+5, r23	; 0x05
      f8:	6c 83       	std	Y+4, r22	; 0x04
      fa:	e9 01       	movw	r28, r18
      fc:	7b 83       	std	Y+3, r23	; 0x03
      fe:	6a 83       	std	Y+2, r22	; 0x02
     100:	72 83       	std	Z+2, r23	; 0x02
     102:	61 83       	std	Z+1, r22	; 0x01
     104:	19 96       	adiw	r26, 0x09	; 9
     106:	fc 93       	st	X, r31
     108:	ee 93       	st	-X, r30
     10a:	18 97       	sbiw	r26, 0x08	; 8
     10c:	80 81       	ld	r24, Z
     10e:	8f 5f       	subi	r24, 0xFF	; 255
     110:	80 83       	st	Z, r24
     112:	df 91       	pop	r29
     114:	cf 91       	pop	r28
     116:	08 95       	ret

00000118 <vListRemove>:
/*-----------------------------------------------------------*/

void vListRemove( xListItem *pxItemToRemove )
{
     118:	fc 01       	movw	r30, r24
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     11a:	a2 81       	ldd	r26, Z+2	; 0x02
     11c:	b3 81       	ldd	r27, Z+3	; 0x03
     11e:	84 81       	ldd	r24, Z+4	; 0x04
     120:	95 81       	ldd	r25, Z+5	; 0x05
     122:	15 96       	adiw	r26, 0x05	; 5
     124:	9c 93       	st	X, r25
     126:	8e 93       	st	-X, r24
     128:	14 97       	sbiw	r26, 0x04	; 4
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     12a:	a4 81       	ldd	r26, Z+4	; 0x04
     12c:	b5 81       	ldd	r27, Z+5	; 0x05
     12e:	82 81       	ldd	r24, Z+2	; 0x02
     130:	93 81       	ldd	r25, Z+3	; 0x03
     132:	13 96       	adiw	r26, 0x03	; 3
     134:	9c 93       	st	X, r25
     136:	8e 93       	st	-X, r24
     138:	12 97       	sbiw	r26, 0x02	; 2
	
	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     13a:	a0 85       	ldd	r26, Z+8	; 0x08
     13c:	b1 85       	ldd	r27, Z+9	; 0x09

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     13e:	11 96       	adiw	r26, 0x01	; 1
     140:	8d 91       	ld	r24, X+
     142:	9c 91       	ld	r25, X
     144:	12 97       	sbiw	r26, 0x02	; 2
     146:	8e 17       	cp	r24, r30
     148:	9f 07       	cpc	r25, r31
     14a:	31 f4       	brne	.+12     	; 0x158 <vListRemove+0x40>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     14c:	84 81       	ldd	r24, Z+4	; 0x04
     14e:	95 81       	ldd	r25, Z+5	; 0x05
     150:	12 96       	adiw	r26, 0x02	; 2
     152:	9c 93       	st	X, r25
     154:	8e 93       	st	-X, r24
     156:	11 97       	sbiw	r26, 0x01	; 1
	}

	pxItemToRemove->pvContainer = NULL;
     158:	11 86       	std	Z+9, r1	; 0x09
     15a:	10 86       	std	Z+8, r1	; 0x08
	( pxList->uxNumberOfItems )--;
     15c:	8c 91       	ld	r24, X
     15e:	81 50       	subi	r24, 0x01	; 1
     160:	8c 93       	st	X, r24
     162:	08 95       	ret

00000164 <delay_ms>:
	}
	else {
		while ( !(UCSR1A & (1 << RXC1)) );
		return UDR1;
	}
}
     164:	18 16       	cp	r1, r24
     166:	19 06       	cpc	r1, r25
     168:	9c f4       	brge	.+38     	; 0x190 <delay_ms+0x2c>
     16a:	40 e0       	ldi	r20, 0x00	; 0
     16c:	50 e0       	ldi	r21, 0x00	; 0
     16e:	77 e0       	ldi	r23, 0x07	; 7
     170:	63 e0       	ldi	r22, 0x03	; 3
     172:	0b c0       	rjmp	.+22     	; 0x18a <delay_ms+0x26>
     174:	00 00       	nop
     176:	21 50       	subi	r18, 0x01	; 1
     178:	31 09       	sbc	r19, r1
     17a:	21 15       	cp	r18, r1
     17c:	31 05       	cpc	r19, r1
     17e:	d1 f7       	brne	.-12     	; 0x174 <delay_ms+0x10>
     180:	4f 5f       	subi	r20, 0xFF	; 255
     182:	5f 4f       	sbci	r21, 0xFF	; 255
     184:	48 17       	cp	r20, r24
     186:	59 07       	cpc	r21, r25
     188:	19 f0       	breq	.+6      	; 0x190 <delay_ms+0x2c>
     18a:	27 2f       	mov	r18, r23
     18c:	36 2f       	mov	r19, r22
     18e:	f2 cf       	rjmp	.-28     	; 0x174 <delay_ms+0x10>
     190:	08 95       	ret

00000192 <LCD_WriteCommand>:
     192:	2a 98       	cbi	0x05, 2	; 5
     194:	82 b9       	out	0x02, r24	; 2
     196:	29 9a       	sbi	0x05, 1	; 5
     198:	00 00       	nop
     19a:	29 98       	cbi	0x05, 1	; 5
     19c:	82 e0       	ldi	r24, 0x02	; 2
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	e1 cf       	rjmp	.-62     	; 0x164 <delay_ms>
     1a2:	08 95       	ret

000001a4 <LCD_ClearScreen>:
     1a4:	81 e0       	ldi	r24, 0x01	; 1
     1a6:	f5 cf       	rjmp	.-22     	; 0x192 <LCD_WriteCommand>
     1a8:	08 95       	ret

000001aa <LCD_init>:
     1aa:	84 e6       	ldi	r24, 0x64	; 100
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	da df       	rcall	.-76     	; 0x164 <delay_ms>
     1b0:	88 e3       	ldi	r24, 0x38	; 56
     1b2:	ef df       	rcall	.-34     	; 0x192 <LCD_WriteCommand>
     1b4:	86 e0       	ldi	r24, 0x06	; 6
     1b6:	ed df       	rcall	.-38     	; 0x192 <LCD_WriteCommand>
     1b8:	8f e0       	ldi	r24, 0x0F	; 15
     1ba:	eb df       	rcall	.-42     	; 0x192 <LCD_WriteCommand>
     1bc:	81 e0       	ldi	r24, 0x01	; 1
     1be:	e9 df       	rcall	.-46     	; 0x192 <LCD_WriteCommand>
     1c0:	8a e0       	ldi	r24, 0x0A	; 10
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	cf cf       	rjmp	.-98     	; 0x164 <delay_ms>
     1c6:	08 95       	ret

000001c8 <LCD_WriteData>:
     1c8:	2a 9a       	sbi	0x05, 2	; 5
     1ca:	82 b9       	out	0x02, r24	; 2
     1cc:	29 9a       	sbi	0x05, 1	; 5
     1ce:	00 00       	nop
     1d0:	29 98       	cbi	0x05, 1	; 5
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	c6 cf       	rjmp	.-116    	; 0x164 <delay_ms>
     1d8:	08 95       	ret

000001da <LCD_Cursor>:
     1da:	81 31       	cpi	r24, 0x11	; 17
     1dc:	18 f4       	brcc	.+6      	; 0x1e4 <LCD_Cursor+0xa>
     1de:	81 58       	subi	r24, 0x81	; 129
     1e0:	d8 cf       	rjmp	.-80     	; 0x192 <LCD_WriteCommand>
     1e2:	08 95       	ret
     1e4:	81 55       	subi	r24, 0x51	; 81
     1e6:	d5 cf       	rjmp	.-86     	; 0x192 <LCD_WriteCommand>
     1e8:	08 95       	ret

000001ea <LCD_DisplayString_nclear>:
     1ea:	1f 93       	push	r17
     1ec:	cf 93       	push	r28
     1ee:	df 93       	push	r29
     1f0:	fb 01       	movw	r30, r22
     1f2:	90 81       	ld	r25, Z
     1f4:	99 23       	and	r25, r25
     1f6:	59 f0       	breq	.+22     	; 0x20e <LCD_DisplayString_nclear+0x24>
     1f8:	eb 01       	movw	r28, r22
     1fa:	11 e0       	ldi	r17, 0x01	; 1
     1fc:	18 0f       	add	r17, r24
     1fe:	ed df       	rcall	.-38     	; 0x1da <LCD_Cursor>
     200:	89 91       	ld	r24, Y+
     202:	e2 df       	rcall	.-60     	; 0x1c8 <LCD_WriteData>
     204:	88 81       	ld	r24, Y
     206:	88 23       	and	r24, r24
     208:	11 f0       	breq	.+4      	; 0x20e <LCD_DisplayString_nclear+0x24>
     20a:	81 2f       	mov	r24, r17
     20c:	f6 cf       	rjmp	.-20     	; 0x1fa <LCD_DisplayString_nclear+0x10>
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	1f 91       	pop	r17
     214:	08 95       	ret

00000216 <LCD_DisplayString>:
     216:	0f 93       	push	r16
     218:	1f 93       	push	r17
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	18 2f       	mov	r17, r24
     220:	eb 01       	movw	r28, r22
     222:	c0 df       	rcall	.-128    	; 0x1a4 <LCD_ClearScreen>
     224:	88 81       	ld	r24, Y
     226:	88 23       	and	r24, r24
     228:	59 f0       	breq	.+22     	; 0x240 <LCD_DisplayString+0x2a>
     22a:	01 e0       	ldi	r16, 0x01	; 1
     22c:	01 0f       	add	r16, r17
     22e:	81 2f       	mov	r24, r17
     230:	d4 df       	rcall	.-88     	; 0x1da <LCD_Cursor>
     232:	89 91       	ld	r24, Y+
     234:	c9 df       	rcall	.-110    	; 0x1c8 <LCD_WriteData>
     236:	88 81       	ld	r24, Y
     238:	88 23       	and	r24, r24
     23a:	11 f0       	breq	.+4      	; 0x240 <LCD_DisplayString+0x2a>
     23c:	10 2f       	mov	r17, r16
     23e:	f5 cf       	rjmp	.-22     	; 0x22a <LCD_DisplayString+0x14>
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	1f 91       	pop	r17
     246:	0f 91       	pop	r16
     248:	08 95       	ret

0000024a <__vector_1>:
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	0b b6       	in	r0, 0x3b	; 59
     256:	0f 92       	push	r0
     258:	8f 93       	push	r24
     25a:	9f 93       	push	r25
     25c:	ef 93       	push	r30
     25e:	ff 93       	push	r31
     260:	80 91 58 02 	lds	r24, 0x0258
     264:	90 91 59 02 	lds	r25, 0x0259
     268:	01 97       	sbiw	r24, 0x01	; 1
     26a:	89 f4       	brne	.+34     	; 0x28e <__vector_1+0x44>
     26c:	10 92 81 00 	sts	0x0081, r1
     270:	e4 e8       	ldi	r30, 0x84	; 132
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	80 81       	ld	r24, Z
     276:	91 81       	ldd	r25, Z+1	; 0x01
     278:	90 93 57 02 	sts	0x0257, r25
     27c:	80 93 56 02 	sts	0x0256, r24
     280:	11 82       	std	Z+1, r1	; 0x01
     282:	10 82       	st	Z, r1
     284:	10 92 59 02 	sts	0x0259, r1
     288:	10 92 58 02 	sts	0x0258, r1
     28c:	0b c0       	rjmp	.+22     	; 0x2a4 <__vector_1+0x5a>
     28e:	e1 e8       	ldi	r30, 0x81	; 129
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	81 60       	ori	r24, 0x01	; 1
     296:	80 83       	st	Z, r24
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	90 93 59 02 	sts	0x0259, r25
     2a0:	80 93 58 02 	sts	0x0258, r24
     2a4:	ff 91       	pop	r31
     2a6:	ef 91       	pop	r30
     2a8:	9f 91       	pop	r25
     2aa:	8f 91       	pop	r24
     2ac:	0f 90       	pop	r0
     2ae:	0b be       	out	0x3b, r0	; 59
     2b0:	0f 90       	pop	r0
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	0f 90       	pop	r0
     2b6:	1f 90       	pop	r1
     2b8:	18 95       	reti

000002ba <Distance_Converter>:
     2ba:	5b 9a       	sbi	0x0b, 3	; 11
     2bc:	83 e0       	ldi	r24, 0x03	; 3
     2be:	8a 95       	dec	r24
     2c0:	f1 f7       	brne	.-4      	; 0x2be <Distance_Converter+0x4>
     2c2:	00 00       	nop
     2c4:	5b 98       	cbi	0x0b, 3	; 11
     2c6:	60 91 56 02 	lds	r22, 0x0256
     2ca:	70 91 57 02 	lds	r23, 0x0257
     2ce:	88 27       	eor	r24, r24
     2d0:	77 fd       	sbrc	r23, 7
     2d2:	80 95       	com	r24
     2d4:	98 2f       	mov	r25, r24
     2d6:	75 d6       	rcall	.+3306   	; 0xfc2 <__floatsisf>
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	48 e6       	ldi	r20, 0x68	; 104
     2de:	52 e4       	ldi	r21, 0x42	; 66
     2e0:	d5 d5       	rcall	.+2986   	; 0xe8c <__divsf3>
     2e2:	3c d6       	rcall	.+3192   	; 0xf5c <__fixsfsi>
     2e4:	dc 01       	movw	r26, r24
     2e6:	cb 01       	movw	r24, r22
     2e8:	90 93 55 02 	sts	0x0255, r25
     2ec:	80 93 54 02 	sts	0x0254, r24
     2f0:	4a e0       	ldi	r20, 0x0A	; 10
     2f2:	6f e8       	ldi	r22, 0x8F	; 143
     2f4:	72 e0       	ldi	r23, 0x02	; 2
     2f6:	f1 d6       	rcall	.+3554   	; 0x10da <__itoa_ncheck>
     2f8:	80 91 54 02 	lds	r24, 0x0254
     2fc:	90 91 55 02 	lds	r25, 0x0255
     300:	0a 97       	sbiw	r24, 0x0a	; 10
     302:	3c f4       	brge	.+14     	; 0x312 <Distance_Converter+0x58>
     304:	ef e8       	ldi	r30, 0x8F	; 143
     306:	f2 e0       	ldi	r31, 0x02	; 2
     308:	80 81       	ld	r24, Z
     30a:	90 e3       	ldi	r25, 0x30	; 48
     30c:	90 83       	st	Z, r25
     30e:	81 83       	std	Z+1, r24	; 0x01
     310:	12 82       	std	Z+2, r1	; 0x02
     312:	6f e8       	ldi	r22, 0x8F	; 143
     314:	72 e0       	ldi	r23, 0x02	; 2
     316:	8d e1       	ldi	r24, 0x1D	; 29
     318:	68 df       	rcall	.-304    	; 0x1ea <LCD_DisplayString_nclear>
     31a:	66 e0       	ldi	r22, 0x06	; 6
     31c:	71 e0       	ldi	r23, 0x01	; 1
     31e:	8f e1       	ldi	r24, 0x1F	; 31
     320:	64 df       	rcall	.-312    	; 0x1ea <LCD_DisplayString_nclear>
     322:	84 e1       	ldi	r24, 0x14	; 20
     324:	8a 95       	dec	r24
     326:	f1 f7       	brne	.-4      	; 0x324 <Distance_Converter+0x6a>
     328:	08 95       	ret

0000032a <Water_Amount>:
     32a:	5b 9a       	sbi	0x0b, 3	; 11
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	8a 95       	dec	r24
     330:	f1 f7       	brne	.-4      	; 0x32e <Water_Amount+0x4>
     332:	00 00       	nop
     334:	5b 98       	cbi	0x0b, 3	; 11
     336:	60 91 56 02 	lds	r22, 0x0256
     33a:	70 91 57 02 	lds	r23, 0x0257
     33e:	88 27       	eor	r24, r24
     340:	77 fd       	sbrc	r23, 7
     342:	80 95       	com	r24
     344:	98 2f       	mov	r25, r24
     346:	3d d6       	rcall	.+3194   	; 0xfc2 <__floatsisf>
     348:	20 e0       	ldi	r18, 0x00	; 0
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	48 e6       	ldi	r20, 0x68	; 104
     34e:	52 e4       	ldi	r21, 0x42	; 66
     350:	9d d5       	rcall	.+2874   	; 0xe8c <__divsf3>
     352:	04 d6       	rcall	.+3080   	; 0xf5c <__fixsfsi>
     354:	70 93 55 02 	sts	0x0255, r23
     358:	60 93 54 02 	sts	0x0254, r22
     35c:	84 e1       	ldi	r24, 0x14	; 20
     35e:	8a 95       	dec	r24
     360:	f1 f7       	brne	.-4      	; 0x35e <Water_Amount+0x34>
     362:	80 91 54 02 	lds	r24, 0x0254
     366:	90 91 55 02 	lds	r25, 0x0255
     36a:	08 95       	ret

0000036c <init_HC_SR04>:
     36c:	e9 e6       	ldi	r30, 0x69	; 105
     36e:	f0 e0       	ldi	r31, 0x00	; 0
     370:	80 81       	ld	r24, Z
     372:	81 60       	ori	r24, 0x01	; 1
     374:	80 83       	st	Z, r24
     376:	e8 9a       	sbi	0x1d, 0	; 29
     378:	78 94       	sei
     37a:	08 95       	ret

0000037c <GetKeypadKey>:
     37c:	8f ee       	ldi	r24, 0xEF	; 239
     37e:	88 b9       	out	0x08, r24	; 8
     380:	00 00       	nop
     382:	30 9b       	sbis	0x06, 0	; 6
     384:	29 c0       	rjmp	.+82     	; 0x3d8 <GetKeypadKey+0x5c>
     386:	31 9b       	sbis	0x06, 1	; 6
     388:	29 c0       	rjmp	.+82     	; 0x3dc <GetKeypadKey+0x60>
     38a:	32 9b       	sbis	0x06, 2	; 6
     38c:	29 c0       	rjmp	.+82     	; 0x3e0 <GetKeypadKey+0x64>
     38e:	33 9b       	sbis	0x06, 3	; 6
     390:	29 c0       	rjmp	.+82     	; 0x3e4 <GetKeypadKey+0x68>
     392:	8f ed       	ldi	r24, 0xDF	; 223
     394:	88 b9       	out	0x08, r24	; 8
     396:	00 00       	nop
     398:	30 9b       	sbis	0x06, 0	; 6
     39a:	26 c0       	rjmp	.+76     	; 0x3e8 <GetKeypadKey+0x6c>
     39c:	31 9b       	sbis	0x06, 1	; 6
     39e:	26 c0       	rjmp	.+76     	; 0x3ec <GetKeypadKey+0x70>
     3a0:	32 9b       	sbis	0x06, 2	; 6
     3a2:	26 c0       	rjmp	.+76     	; 0x3f0 <GetKeypadKey+0x74>
     3a4:	33 9b       	sbis	0x06, 3	; 6
     3a6:	26 c0       	rjmp	.+76     	; 0x3f4 <GetKeypadKey+0x78>
     3a8:	8f eb       	ldi	r24, 0xBF	; 191
     3aa:	88 b9       	out	0x08, r24	; 8
     3ac:	00 00       	nop
     3ae:	30 9b       	sbis	0x06, 0	; 6
     3b0:	23 c0       	rjmp	.+70     	; 0x3f8 <GetKeypadKey+0x7c>
     3b2:	31 9b       	sbis	0x06, 1	; 6
     3b4:	23 c0       	rjmp	.+70     	; 0x3fc <GetKeypadKey+0x80>
     3b6:	32 9b       	sbis	0x06, 2	; 6
     3b8:	23 c0       	rjmp	.+70     	; 0x400 <GetKeypadKey+0x84>
     3ba:	33 9b       	sbis	0x06, 3	; 6
     3bc:	23 c0       	rjmp	.+70     	; 0x404 <GetKeypadKey+0x88>
     3be:	8f e7       	ldi	r24, 0x7F	; 127
     3c0:	88 b9       	out	0x08, r24	; 8
     3c2:	00 00       	nop
     3c4:	30 9b       	sbis	0x06, 0	; 6
     3c6:	20 c0       	rjmp	.+64     	; 0x408 <GetKeypadKey+0x8c>
     3c8:	31 9b       	sbis	0x06, 1	; 6
     3ca:	20 c0       	rjmp	.+64     	; 0x40c <GetKeypadKey+0x90>
     3cc:	32 9b       	sbis	0x06, 2	; 6
     3ce:	20 c0       	rjmp	.+64     	; 0x410 <GetKeypadKey+0x94>
     3d0:	33 99       	sbic	0x06, 3	; 6
     3d2:	20 c0       	rjmp	.+64     	; 0x414 <GetKeypadKey+0x98>
     3d4:	84 e4       	ldi	r24, 0x44	; 68
     3d6:	08 95       	ret
     3d8:	81 e3       	ldi	r24, 0x31	; 49
     3da:	08 95       	ret
     3dc:	84 e3       	ldi	r24, 0x34	; 52
     3de:	08 95       	ret
     3e0:	87 e3       	ldi	r24, 0x37	; 55
     3e2:	08 95       	ret
     3e4:	8a e2       	ldi	r24, 0x2A	; 42
     3e6:	08 95       	ret
     3e8:	82 e3       	ldi	r24, 0x32	; 50
     3ea:	08 95       	ret
     3ec:	85 e3       	ldi	r24, 0x35	; 53
     3ee:	08 95       	ret
     3f0:	88 e3       	ldi	r24, 0x38	; 56
     3f2:	08 95       	ret
     3f4:	80 e3       	ldi	r24, 0x30	; 48
     3f6:	08 95       	ret
     3f8:	83 e3       	ldi	r24, 0x33	; 51
     3fa:	08 95       	ret
     3fc:	86 e3       	ldi	r24, 0x36	; 54
     3fe:	08 95       	ret
     400:	89 e3       	ldi	r24, 0x39	; 57
     402:	08 95       	ret
     404:	83 e2       	ldi	r24, 0x23	; 35
     406:	08 95       	ret
     408:	81 e4       	ldi	r24, 0x41	; 65
     40a:	08 95       	ret
     40c:	82 e4       	ldi	r24, 0x42	; 66
     40e:	08 95       	ret
     410:	83 e4       	ldi	r24, 0x43	; 67
     412:	08 95       	ret
     414:	80 e0       	ldi	r24, 0x00	; 0
     416:	08 95       	ret

00000418 <transmit_data>:
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	70 e8       	ldi	r23, 0x80	; 128
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	7b b9       	out	0x0b, r23	; 11
     422:	5b b1       	in	r21, 0x0b	; 11
     424:	4b b1       	in	r20, 0x0b	; 11
     426:	4f 7b       	andi	r20, 0xBF	; 191
     428:	4b b9       	out	0x0b, r20	; 11
     42a:	45 2b       	or	r20, r21
     42c:	4b b9       	out	0x0b, r20	; 11
     42e:	6b b1       	in	r22, 0x0b	; 11
     430:	ac 01       	movw	r20, r24
     432:	02 2e       	mov	r0, r18
     434:	02 c0       	rjmp	.+4      	; 0x43a <transmit_data+0x22>
     436:	55 95       	asr	r21
     438:	47 95       	ror	r20
     43a:	0a 94       	dec	r0
     43c:	e2 f7       	brpl	.-8      	; 0x436 <transmit_data+0x1e>
     43e:	41 70       	andi	r20, 0x01	; 1
     440:	46 2b       	or	r20, r22
     442:	4b b9       	out	0x0b, r20	; 11
     444:	5e 9a       	sbi	0x0b, 6	; 11
     446:	2f 5f       	subi	r18, 0xFF	; 255
     448:	3f 4f       	sbci	r19, 0xFF	; 255
     44a:	28 30       	cpi	r18, 0x08	; 8
     44c:	31 05       	cpc	r19, r1
     44e:	41 f7       	brne	.-48     	; 0x420 <transmit_data+0x8>
     450:	80 e2       	ldi	r24, 0x20	; 32
     452:	8b b9       	out	0x0b, r24	; 11
     454:	1b b8       	out	0x0b, r1	; 11
     456:	08 95       	ret

00000458 <transmit_data2>:
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	70 e8       	ldi	r23, 0x80	; 128
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	75 b9       	out	0x05, r23	; 5
     462:	55 b1       	in	r21, 0x05	; 5
     464:	45 b1       	in	r20, 0x05	; 5
     466:	4f 7b       	andi	r20, 0xBF	; 191
     468:	45 b9       	out	0x05, r20	; 5
     46a:	45 2b       	or	r20, r21
     46c:	45 b9       	out	0x05, r20	; 5
     46e:	65 b1       	in	r22, 0x05	; 5
     470:	ac 01       	movw	r20, r24
     472:	02 2e       	mov	r0, r18
     474:	02 c0       	rjmp	.+4      	; 0x47a <transmit_data2+0x22>
     476:	55 95       	asr	r21
     478:	47 95       	ror	r20
     47a:	0a 94       	dec	r0
     47c:	e2 f7       	brpl	.-8      	; 0x476 <transmit_data2+0x1e>
     47e:	41 70       	andi	r20, 0x01	; 1
     480:	46 2b       	or	r20, r22
     482:	45 b9       	out	0x05, r20	; 5
     484:	2e 9a       	sbi	0x05, 6	; 5
     486:	2f 5f       	subi	r18, 0xFF	; 255
     488:	3f 4f       	sbci	r19, 0xFF	; 255
     48a:	28 30       	cpi	r18, 0x08	; 8
     48c:	31 05       	cpc	r19, r1
     48e:	41 f7       	brne	.-48     	; 0x460 <transmit_data2+0x8>
     490:	80 e2       	ldi	r24, 0x20	; 32
     492:	85 b9       	out	0x05, r24	; 5
     494:	15 b8       	out	0x05, r1	; 5
     496:	08 95       	ret

00000498 <Matrix_Display>:
     498:	2f 92       	push	r2
     49a:	3f 92       	push	r3
     49c:	4f 92       	push	r4
     49e:	5f 92       	push	r5
     4a0:	6f 92       	push	r6
     4a2:	7f 92       	push	r7
     4a4:	8f 92       	push	r8
     4a6:	9f 92       	push	r9
     4a8:	af 92       	push	r10
     4aa:	bf 92       	push	r11
     4ac:	cf 92       	push	r12
     4ae:	df 92       	push	r13
     4b0:	ef 92       	push	r14
     4b2:	ff 92       	push	r15
     4b4:	0f 93       	push	r16
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	00 d0       	rcall	.+0      	; 0x4be <Matrix_Display+0x26>
     4be:	00 d0       	rcall	.+0      	; 0x4c0 <Matrix_Display+0x28>
     4c0:	cd b7       	in	r28, 0x3d	; 61
     4c2:	de b7       	in	r29, 0x3e	; 62
     4c4:	6c 01       	movw	r12, r24
     4c6:	36 2e       	mov	r3, r22
     4c8:	30 df       	rcall	.-416    	; 0x32a <Water_Amount>
     4ca:	20 91 02 01 	lds	r18, 0x0102
     4ce:	30 91 03 01 	lds	r19, 0x0103
     4d2:	82 1b       	sub	r24, r18
     4d4:	93 0b       	sbc	r25, r19
     4d6:	90 93 8c 02 	sts	0x028C, r25
     4da:	80 93 8b 02 	sts	0x028B, r24
     4de:	c1 14       	cp	r12, r1
     4e0:	d1 04       	cpc	r13, r1
     4e2:	09 f4       	brne	.+2      	; 0x4e6 <Matrix_Display+0x4e>
     4e4:	a0 c2       	rjmp	.+1344   	; 0xa26 <Matrix_Display+0x58e>
     4e6:	e1 2c       	mov	r14, r1
     4e8:	f1 2c       	mov	r15, r1
     4ea:	61 2c       	mov	r6, r1
     4ec:	71 2c       	mov	r7, r1
     4ee:	00 e0       	ldi	r16, 0x00	; 0
     4f0:	10 e0       	ldi	r17, 0x00	; 0
     4f2:	1c 82       	std	Y+4, r1	; 0x04
     4f4:	1b 82       	std	Y+3, r1	; 0x03
     4f6:	c9 82       	std	Y+1, r12	; 0x01
     4f8:	da 82       	std	Y+2, r13	; 0x02
     4fa:	41 2c       	mov	r4, r1
     4fc:	51 2c       	mov	r5, r1
     4fe:	0f 2e       	mov	r0, r31
     500:	f0 ea       	ldi	r31, 0xA0	; 160
     502:	af 2e       	mov	r10, r31
     504:	f2 e0       	ldi	r31, 0x02	; 2
     506:	bf 2e       	mov	r11, r31
     508:	f0 2d       	mov	r31, r0
     50a:	0f 2e       	mov	r0, r31
     50c:	fd e8       	ldi	r31, 0x8D	; 141
     50e:	8f 2e       	mov	r8, r31
     510:	f2 e0       	ldi	r31, 0x02	; 2
     512:	9f 2e       	mov	r9, r31
     514:	f0 2d       	mov	r31, r0
     516:	68 94       	set
     518:	22 24       	eor	r2, r2
     51a:	27 f8       	bld	r2, 7
     51c:	2f df       	rcall	.-418    	; 0x37c <GetKeypadKey>
     51e:	80 93 9f 02 	sts	0x029F, r24
     522:	8a 32       	cpi	r24, 0x2A	; 42
     524:	11 f4       	brne	.+4      	; 0x52a <Matrix_Display+0x92>
     526:	69 80       	ldd	r6, Y+1	; 0x01
     528:	7a 80       	ldd	r7, Y+2	; 0x02
     52a:	35 b8       	out	0x05, r3	; 5
     52c:	fe de       	rcall	.-516    	; 0x32a <Water_Amount>
     52e:	20 91 00 01 	lds	r18, 0x0100
     532:	30 91 01 01 	lds	r19, 0x0101
     536:	a9 01       	movw	r20, r18
     538:	48 1b       	sub	r20, r24
     53a:	59 0b       	sbc	r21, r25
     53c:	ca 01       	movw	r24, r20
     53e:	50 93 03 01 	sts	0x0103, r21
     542:	40 93 02 01 	sts	0x0102, r20
     546:	20 91 8b 02 	lds	r18, 0x028B
     54a:	30 91 8c 02 	lds	r19, 0x028C
     54e:	42 17       	cp	r20, r18
     550:	53 07       	cpc	r21, r19
     552:	49 f0       	breq	.+18     	; 0x566 <Matrix_Display+0xce>
     554:	50 93 8c 02 	sts	0x028C, r21
     558:	40 93 8b 02 	sts	0x028B, r20
     55c:	04 2d       	mov	r16, r4
     55e:	15 2d       	mov	r17, r5
     560:	4b 82       	std	Y+3, r4	; 0x03
     562:	5c 82       	std	Y+4, r5	; 0x04
     564:	0d c0       	rjmp	.+26     	; 0x580 <Matrix_Display+0xe8>
     566:	eb 81       	ldd	r30, Y+3	; 0x03
     568:	fc 81       	ldd	r31, Y+4	; 0x04
     56a:	32 97       	sbiw	r30, 0x02	; 2
     56c:	24 f4       	brge	.+8      	; 0x576 <Matrix_Display+0xde>
     56e:	02 30       	cpi	r16, 0x02	; 2
     570:	11 05       	cpc	r17, r1
     572:	24 f4       	brge	.+8      	; 0x57c <Matrix_Display+0xe4>
     574:	05 c0       	rjmp	.+10     	; 0x580 <Matrix_Display+0xe8>
     576:	4b 82       	std	Y+3, r4	; 0x03
     578:	5c 82       	std	Y+4, r5	; 0x04
     57a:	02 c0       	rjmp	.+4      	; 0x580 <Matrix_Display+0xe8>
     57c:	4b 82       	std	Y+3, r4	; 0x03
     57e:	5c 82       	std	Y+4, r5	; 0x04
     580:	18 16       	cp	r1, r24
     582:	19 06       	cpc	r1, r25
     584:	64 f0       	brlt	.+24     	; 0x59e <Matrix_Display+0x106>
     586:	2f ef       	ldi	r18, 0xFF	; 255
     588:	f5 01       	movw	r30, r10
     58a:	20 83       	st	Z, r18
     58c:	e1 ea       	ldi	r30, 0xA1	; 161
     58e:	f2 e0       	ldi	r31, 0x02	; 2
     590:	20 83       	st	Z, r18
     592:	f4 01       	movw	r30, r8
     594:	10 82       	st	Z, r1
     596:	ee e8       	ldi	r30, 0x8E	; 142
     598:	f2 e0       	ldi	r31, 0x02	; 2
     59a:	10 82       	st	Z, r1
     59c:	ff c1       	rjmp	.+1022   	; 0x99c <Matrix_Display+0x504>
     59e:	84 30       	cpi	r24, 0x04	; 4
     5a0:	91 05       	cpc	r25, r1
     5a2:	64 f4       	brge	.+24     	; 0x5bc <Matrix_Display+0x124>
     5a4:	2f ee       	ldi	r18, 0xEF	; 239
     5a6:	f5 01       	movw	r30, r10
     5a8:	20 83       	st	Z, r18
     5aa:	e1 ea       	ldi	r30, 0xA1	; 161
     5ac:	f2 e0       	ldi	r31, 0x02	; 2
     5ae:	20 83       	st	Z, r18
     5b0:	f4 01       	movw	r30, r8
     5b2:	20 82       	st	Z, r2
     5b4:	ee e8       	ldi	r30, 0x8E	; 142
     5b6:	f2 e0       	ldi	r31, 0x02	; 2
     5b8:	20 82       	st	Z, r2
     5ba:	f0 c1       	rjmp	.+992    	; 0x99c <Matrix_Display+0x504>
     5bc:	86 30       	cpi	r24, 0x06	; 6
     5be:	91 05       	cpc	r25, r1
     5c0:	6c f4       	brge	.+26     	; 0x5dc <Matrix_Display+0x144>
     5c2:	2f ee       	ldi	r18, 0xEF	; 239
     5c4:	f5 01       	movw	r30, r10
     5c6:	20 83       	st	Z, r18
     5c8:	e1 ea       	ldi	r30, 0xA1	; 161
     5ca:	f2 e0       	ldi	r31, 0x02	; 2
     5cc:	20 83       	st	Z, r18
     5ce:	20 ec       	ldi	r18, 0xC0	; 192
     5d0:	f4 01       	movw	r30, r8
     5d2:	20 83       	st	Z, r18
     5d4:	ee e8       	ldi	r30, 0x8E	; 142
     5d6:	f2 e0       	ldi	r31, 0x02	; 2
     5d8:	20 83       	st	Z, r18
     5da:	e0 c1       	rjmp	.+960    	; 0x99c <Matrix_Display+0x504>
     5dc:	88 30       	cpi	r24, 0x08	; 8
     5de:	91 05       	cpc	r25, r1
     5e0:	6c f4       	brge	.+26     	; 0x5fc <Matrix_Display+0x164>
     5e2:	2f ee       	ldi	r18, 0xEF	; 239
     5e4:	f5 01       	movw	r30, r10
     5e6:	20 83       	st	Z, r18
     5e8:	e1 ea       	ldi	r30, 0xA1	; 161
     5ea:	f2 e0       	ldi	r31, 0x02	; 2
     5ec:	20 83       	st	Z, r18
     5ee:	20 ee       	ldi	r18, 0xE0	; 224
     5f0:	f4 01       	movw	r30, r8
     5f2:	20 83       	st	Z, r18
     5f4:	ee e8       	ldi	r30, 0x8E	; 142
     5f6:	f2 e0       	ldi	r31, 0x02	; 2
     5f8:	20 83       	st	Z, r18
     5fa:	d0 c1       	rjmp	.+928    	; 0x99c <Matrix_Display+0x504>
     5fc:	89 30       	cpi	r24, 0x09	; 9
     5fe:	91 05       	cpc	r25, r1
     600:	6c f4       	brge	.+26     	; 0x61c <Matrix_Display+0x184>
     602:	2f ee       	ldi	r18, 0xEF	; 239
     604:	f5 01       	movw	r30, r10
     606:	20 83       	st	Z, r18
     608:	e1 ea       	ldi	r30, 0xA1	; 161
     60a:	f2 e0       	ldi	r31, 0x02	; 2
     60c:	20 83       	st	Z, r18
     60e:	20 ef       	ldi	r18, 0xF0	; 240
     610:	f4 01       	movw	r30, r8
     612:	20 83       	st	Z, r18
     614:	ee e8       	ldi	r30, 0x8E	; 142
     616:	f2 e0       	ldi	r31, 0x02	; 2
     618:	20 83       	st	Z, r18
     61a:	c0 c1       	rjmp	.+896    	; 0x99c <Matrix_Display+0x504>
     61c:	8a 30       	cpi	r24, 0x0A	; 10
     61e:	91 05       	cpc	r25, r1
     620:	6c f4       	brge	.+26     	; 0x63c <Matrix_Display+0x1a4>
     622:	2f ee       	ldi	r18, 0xEF	; 239
     624:	f5 01       	movw	r30, r10
     626:	20 83       	st	Z, r18
     628:	e1 ea       	ldi	r30, 0xA1	; 161
     62a:	f2 e0       	ldi	r31, 0x02	; 2
     62c:	20 83       	st	Z, r18
     62e:	28 ef       	ldi	r18, 0xF8	; 248
     630:	f4 01       	movw	r30, r8
     632:	20 83       	st	Z, r18
     634:	ee e8       	ldi	r30, 0x8E	; 142
     636:	f2 e0       	ldi	r31, 0x02	; 2
     638:	20 83       	st	Z, r18
     63a:	b0 c1       	rjmp	.+864    	; 0x99c <Matrix_Display+0x504>
     63c:	8b 30       	cpi	r24, 0x0B	; 11
     63e:	91 05       	cpc	r25, r1
     640:	6c f4       	brge	.+26     	; 0x65c <Matrix_Display+0x1c4>
     642:	2f ee       	ldi	r18, 0xEF	; 239
     644:	f5 01       	movw	r30, r10
     646:	20 83       	st	Z, r18
     648:	e1 ea       	ldi	r30, 0xA1	; 161
     64a:	f2 e0       	ldi	r31, 0x02	; 2
     64c:	20 83       	st	Z, r18
     64e:	28 ef       	ldi	r18, 0xF8	; 248
     650:	f4 01       	movw	r30, r8
     652:	20 83       	st	Z, r18
     654:	ee e8       	ldi	r30, 0x8E	; 142
     656:	f2 e0       	ldi	r31, 0x02	; 2
     658:	20 83       	st	Z, r18
     65a:	a0 c1       	rjmp	.+832    	; 0x99c <Matrix_Display+0x504>
     65c:	8c 30       	cpi	r24, 0x0C	; 12
     65e:	91 05       	cpc	r25, r1
     660:	6c f4       	brge	.+26     	; 0x67c <Matrix_Display+0x1e4>
     662:	2f ee       	ldi	r18, 0xEF	; 239
     664:	f5 01       	movw	r30, r10
     666:	20 83       	st	Z, r18
     668:	e1 ea       	ldi	r30, 0xA1	; 161
     66a:	f2 e0       	ldi	r31, 0x02	; 2
     66c:	20 83       	st	Z, r18
     66e:	2c ef       	ldi	r18, 0xFC	; 252
     670:	f4 01       	movw	r30, r8
     672:	20 83       	st	Z, r18
     674:	ee e8       	ldi	r30, 0x8E	; 142
     676:	f2 e0       	ldi	r31, 0x02	; 2
     678:	20 83       	st	Z, r18
     67a:	90 c1       	rjmp	.+800    	; 0x99c <Matrix_Display+0x504>
     67c:	8d 30       	cpi	r24, 0x0D	; 13
     67e:	91 05       	cpc	r25, r1
     680:	6c f4       	brge	.+26     	; 0x69c <Matrix_Display+0x204>
     682:	2f ee       	ldi	r18, 0xEF	; 239
     684:	f5 01       	movw	r30, r10
     686:	20 83       	st	Z, r18
     688:	e1 ea       	ldi	r30, 0xA1	; 161
     68a:	f2 e0       	ldi	r31, 0x02	; 2
     68c:	20 83       	st	Z, r18
     68e:	2e ef       	ldi	r18, 0xFE	; 254
     690:	f4 01       	movw	r30, r8
     692:	20 83       	st	Z, r18
     694:	ee e8       	ldi	r30, 0x8E	; 142
     696:	f2 e0       	ldi	r31, 0x02	; 2
     698:	20 83       	st	Z, r18
     69a:	80 c1       	rjmp	.+768    	; 0x99c <Matrix_Display+0x504>
     69c:	8e 30       	cpi	r24, 0x0E	; 14
     69e:	91 05       	cpc	r25, r1
     6a0:	6c f4       	brge	.+26     	; 0x6bc <Matrix_Display+0x224>
     6a2:	8f ee       	ldi	r24, 0xEF	; 239
     6a4:	f5 01       	movw	r30, r10
     6a6:	80 83       	st	Z, r24
     6a8:	e1 ea       	ldi	r30, 0xA1	; 161
     6aa:	f2 e0       	ldi	r31, 0x02	; 2
     6ac:	80 83       	st	Z, r24
     6ae:	2f ef       	ldi	r18, 0xFF	; 255
     6b0:	f4 01       	movw	r30, r8
     6b2:	20 83       	st	Z, r18
     6b4:	ee e8       	ldi	r30, 0x8E	; 142
     6b6:	f2 e0       	ldi	r31, 0x02	; 2
     6b8:	20 83       	st	Z, r18
     6ba:	82 c1       	rjmp	.+772    	; 0x9c0 <Matrix_Display+0x528>
     6bc:	8f 30       	cpi	r24, 0x0F	; 15
     6be:	91 05       	cpc	r25, r1
     6c0:	74 f4       	brge	.+28     	; 0x6de <Matrix_Display+0x246>
     6c2:	2f ee       	ldi	r18, 0xEF	; 239
     6c4:	f5 01       	movw	r30, r10
     6c6:	20 83       	st	Z, r18
     6c8:	27 ef       	ldi	r18, 0xF7	; 247
     6ca:	e1 ea       	ldi	r30, 0xA1	; 161
     6cc:	f2 e0       	ldi	r31, 0x02	; 2
     6ce:	20 83       	st	Z, r18
     6d0:	2f ef       	ldi	r18, 0xFF	; 255
     6d2:	f4 01       	movw	r30, r8
     6d4:	20 83       	st	Z, r18
     6d6:	ee e8       	ldi	r30, 0x8E	; 142
     6d8:	f2 e0       	ldi	r31, 0x02	; 2
     6da:	20 82       	st	Z, r2
     6dc:	62 c1       	rjmp	.+708    	; 0x9a2 <Matrix_Display+0x50a>
     6de:	80 31       	cpi	r24, 0x10	; 16
     6e0:	91 05       	cpc	r25, r1
     6e2:	7c f4       	brge	.+30     	; 0x702 <Matrix_Display+0x26a>
     6e4:	2f ee       	ldi	r18, 0xEF	; 239
     6e6:	f5 01       	movw	r30, r10
     6e8:	20 83       	st	Z, r18
     6ea:	27 ef       	ldi	r18, 0xF7	; 247
     6ec:	e1 ea       	ldi	r30, 0xA1	; 161
     6ee:	f2 e0       	ldi	r31, 0x02	; 2
     6f0:	20 83       	st	Z, r18
     6f2:	2f ef       	ldi	r18, 0xFF	; 255
     6f4:	f4 01       	movw	r30, r8
     6f6:	20 83       	st	Z, r18
     6f8:	20 ec       	ldi	r18, 0xC0	; 192
     6fa:	ee e8       	ldi	r30, 0x8E	; 142
     6fc:	f2 e0       	ldi	r31, 0x02	; 2
     6fe:	20 83       	st	Z, r18
     700:	50 c1       	rjmp	.+672    	; 0x9a2 <Matrix_Display+0x50a>
     702:	81 31       	cpi	r24, 0x11	; 17
     704:	91 05       	cpc	r25, r1
     706:	7c f4       	brge	.+30     	; 0x726 <Matrix_Display+0x28e>
     708:	2f ee       	ldi	r18, 0xEF	; 239
     70a:	f5 01       	movw	r30, r10
     70c:	20 83       	st	Z, r18
     70e:	27 ef       	ldi	r18, 0xF7	; 247
     710:	e1 ea       	ldi	r30, 0xA1	; 161
     712:	f2 e0       	ldi	r31, 0x02	; 2
     714:	20 83       	st	Z, r18
     716:	2f ef       	ldi	r18, 0xFF	; 255
     718:	f4 01       	movw	r30, r8
     71a:	20 83       	st	Z, r18
     71c:	20 ee       	ldi	r18, 0xE0	; 224
     71e:	ee e8       	ldi	r30, 0x8E	; 142
     720:	f2 e0       	ldi	r31, 0x02	; 2
     722:	20 83       	st	Z, r18
     724:	3e c1       	rjmp	.+636    	; 0x9a2 <Matrix_Display+0x50a>
     726:	82 31       	cpi	r24, 0x12	; 18
     728:	91 05       	cpc	r25, r1
     72a:	7c f4       	brge	.+30     	; 0x74a <Matrix_Display+0x2b2>
     72c:	2f ee       	ldi	r18, 0xEF	; 239
     72e:	f5 01       	movw	r30, r10
     730:	20 83       	st	Z, r18
     732:	27 ef       	ldi	r18, 0xF7	; 247
     734:	e1 ea       	ldi	r30, 0xA1	; 161
     736:	f2 e0       	ldi	r31, 0x02	; 2
     738:	20 83       	st	Z, r18
     73a:	2f ef       	ldi	r18, 0xFF	; 255
     73c:	f4 01       	movw	r30, r8
     73e:	20 83       	st	Z, r18
     740:	20 ef       	ldi	r18, 0xF0	; 240
     742:	ee e8       	ldi	r30, 0x8E	; 142
     744:	f2 e0       	ldi	r31, 0x02	; 2
     746:	20 83       	st	Z, r18
     748:	2c c1       	rjmp	.+600    	; 0x9a2 <Matrix_Display+0x50a>
     74a:	83 31       	cpi	r24, 0x13	; 19
     74c:	91 05       	cpc	r25, r1
     74e:	7c f4       	brge	.+30     	; 0x76e <Matrix_Display+0x2d6>
     750:	2f ee       	ldi	r18, 0xEF	; 239
     752:	f5 01       	movw	r30, r10
     754:	20 83       	st	Z, r18
     756:	27 ef       	ldi	r18, 0xF7	; 247
     758:	e1 ea       	ldi	r30, 0xA1	; 161
     75a:	f2 e0       	ldi	r31, 0x02	; 2
     75c:	20 83       	st	Z, r18
     75e:	2f ef       	ldi	r18, 0xFF	; 255
     760:	f4 01       	movw	r30, r8
     762:	20 83       	st	Z, r18
     764:	2c ef       	ldi	r18, 0xFC	; 252
     766:	ee e8       	ldi	r30, 0x8E	; 142
     768:	f2 e0       	ldi	r31, 0x02	; 2
     76a:	20 83       	st	Z, r18
     76c:	1a c1       	rjmp	.+564    	; 0x9a2 <Matrix_Display+0x50a>
     76e:	84 31       	cpi	r24, 0x14	; 20
     770:	91 05       	cpc	r25, r1
     772:	7c f4       	brge	.+30     	; 0x792 <Matrix_Display+0x2fa>
     774:	2f ee       	ldi	r18, 0xEF	; 239
     776:	f5 01       	movw	r30, r10
     778:	20 83       	st	Z, r18
     77a:	27 ef       	ldi	r18, 0xF7	; 247
     77c:	e1 ea       	ldi	r30, 0xA1	; 161
     77e:	f2 e0       	ldi	r31, 0x02	; 2
     780:	20 83       	st	Z, r18
     782:	2f ef       	ldi	r18, 0xFF	; 255
     784:	f4 01       	movw	r30, r8
     786:	20 83       	st	Z, r18
     788:	2e ef       	ldi	r18, 0xFE	; 254
     78a:	ee e8       	ldi	r30, 0x8E	; 142
     78c:	f2 e0       	ldi	r31, 0x02	; 2
     78e:	20 83       	st	Z, r18
     790:	08 c1       	rjmp	.+528    	; 0x9a2 <Matrix_Display+0x50a>
     792:	85 31       	cpi	r24, 0x15	; 21
     794:	91 05       	cpc	r25, r1
     796:	6c f4       	brge	.+26     	; 0x7b2 <Matrix_Display+0x31a>
     798:	27 ee       	ldi	r18, 0xE7	; 231
     79a:	f5 01       	movw	r30, r10
     79c:	20 83       	st	Z, r18
     79e:	e1 ea       	ldi	r30, 0xA1	; 161
     7a0:	f2 e0       	ldi	r31, 0x02	; 2
     7a2:	20 83       	st	Z, r18
     7a4:	2f ef       	ldi	r18, 0xFF	; 255
     7a6:	f4 01       	movw	r30, r8
     7a8:	20 83       	st	Z, r18
     7aa:	ee e8       	ldi	r30, 0x8E	; 142
     7ac:	f2 e0       	ldi	r31, 0x02	; 2
     7ae:	20 83       	st	Z, r18
     7b0:	f8 c0       	rjmp	.+496    	; 0x9a2 <Matrix_Display+0x50a>
     7b2:	86 31       	cpi	r24, 0x16	; 22
     7b4:	91 05       	cpc	r25, r1
     7b6:	7c f4       	brge	.+30     	; 0x7d6 <Matrix_Display+0x33e>
     7b8:	27 ee       	ldi	r18, 0xE7	; 231
     7ba:	f5 01       	movw	r30, r10
     7bc:	20 83       	st	Z, r18
     7be:	2b ef       	ldi	r18, 0xFB	; 251
     7c0:	e1 ea       	ldi	r30, 0xA1	; 161
     7c2:	f2 e0       	ldi	r31, 0x02	; 2
     7c4:	20 83       	st	Z, r18
     7c6:	2f ef       	ldi	r18, 0xFF	; 255
     7c8:	f4 01       	movw	r30, r8
     7ca:	20 83       	st	Z, r18
     7cc:	20 ec       	ldi	r18, 0xC0	; 192
     7ce:	ee e8       	ldi	r30, 0x8E	; 142
     7d0:	f2 e0       	ldi	r31, 0x02	; 2
     7d2:	20 83       	st	Z, r18
     7d4:	e6 c0       	rjmp	.+460    	; 0x9a2 <Matrix_Display+0x50a>
     7d6:	87 31       	cpi	r24, 0x17	; 23
     7d8:	91 05       	cpc	r25, r1
     7da:	7c f4       	brge	.+30     	; 0x7fa <Matrix_Display+0x362>
     7dc:	27 ee       	ldi	r18, 0xE7	; 231
     7de:	f5 01       	movw	r30, r10
     7e0:	20 83       	st	Z, r18
     7e2:	2b ef       	ldi	r18, 0xFB	; 251
     7e4:	e1 ea       	ldi	r30, 0xA1	; 161
     7e6:	f2 e0       	ldi	r31, 0x02	; 2
     7e8:	20 83       	st	Z, r18
     7ea:	2f ef       	ldi	r18, 0xFF	; 255
     7ec:	f4 01       	movw	r30, r8
     7ee:	20 83       	st	Z, r18
     7f0:	20 ef       	ldi	r18, 0xF0	; 240
     7f2:	ee e8       	ldi	r30, 0x8E	; 142
     7f4:	f2 e0       	ldi	r31, 0x02	; 2
     7f6:	20 83       	st	Z, r18
     7f8:	d4 c0       	rjmp	.+424    	; 0x9a2 <Matrix_Display+0x50a>
     7fa:	88 31       	cpi	r24, 0x18	; 24
     7fc:	91 05       	cpc	r25, r1
     7fe:	7c f4       	brge	.+30     	; 0x81e <Matrix_Display+0x386>
     800:	27 ee       	ldi	r18, 0xE7	; 231
     802:	f5 01       	movw	r30, r10
     804:	20 83       	st	Z, r18
     806:	2b ef       	ldi	r18, 0xFB	; 251
     808:	e1 ea       	ldi	r30, 0xA1	; 161
     80a:	f2 e0       	ldi	r31, 0x02	; 2
     80c:	20 83       	st	Z, r18
     80e:	2f ef       	ldi	r18, 0xFF	; 255
     810:	f4 01       	movw	r30, r8
     812:	20 83       	st	Z, r18
     814:	2c ef       	ldi	r18, 0xFC	; 252
     816:	ee e8       	ldi	r30, 0x8E	; 142
     818:	f2 e0       	ldi	r31, 0x02	; 2
     81a:	20 83       	st	Z, r18
     81c:	c2 c0       	rjmp	.+388    	; 0x9a2 <Matrix_Display+0x50a>
     81e:	89 31       	cpi	r24, 0x19	; 25
     820:	91 05       	cpc	r25, r1
     822:	6c f4       	brge	.+26     	; 0x83e <Matrix_Display+0x3a6>
     824:	23 ee       	ldi	r18, 0xE3	; 227
     826:	f5 01       	movw	r30, r10
     828:	20 83       	st	Z, r18
     82a:	e1 ea       	ldi	r30, 0xA1	; 161
     82c:	f2 e0       	ldi	r31, 0x02	; 2
     82e:	20 83       	st	Z, r18
     830:	2f ef       	ldi	r18, 0xFF	; 255
     832:	f4 01       	movw	r30, r8
     834:	20 83       	st	Z, r18
     836:	ee e8       	ldi	r30, 0x8E	; 142
     838:	f2 e0       	ldi	r31, 0x02	; 2
     83a:	20 83       	st	Z, r18
     83c:	b2 c0       	rjmp	.+356    	; 0x9a2 <Matrix_Display+0x50a>
     83e:	8a 31       	cpi	r24, 0x1A	; 26
     840:	91 05       	cpc	r25, r1
     842:	7c f4       	brge	.+30     	; 0x862 <Matrix_Display+0x3ca>
     844:	23 ee       	ldi	r18, 0xE3	; 227
     846:	f5 01       	movw	r30, r10
     848:	20 83       	st	Z, r18
     84a:	2d ef       	ldi	r18, 0xFD	; 253
     84c:	e1 ea       	ldi	r30, 0xA1	; 161
     84e:	f2 e0       	ldi	r31, 0x02	; 2
     850:	20 83       	st	Z, r18
     852:	2f ef       	ldi	r18, 0xFF	; 255
     854:	f4 01       	movw	r30, r8
     856:	20 83       	st	Z, r18
     858:	20 ec       	ldi	r18, 0xC0	; 192
     85a:	ee e8       	ldi	r30, 0x8E	; 142
     85c:	f2 e0       	ldi	r31, 0x02	; 2
     85e:	20 83       	st	Z, r18
     860:	a0 c0       	rjmp	.+320    	; 0x9a2 <Matrix_Display+0x50a>
     862:	8b 31       	cpi	r24, 0x1B	; 27
     864:	91 05       	cpc	r25, r1
     866:	7c f4       	brge	.+30     	; 0x886 <Matrix_Display+0x3ee>
     868:	23 ee       	ldi	r18, 0xE3	; 227
     86a:	f5 01       	movw	r30, r10
     86c:	20 83       	st	Z, r18
     86e:	2d ef       	ldi	r18, 0xFD	; 253
     870:	e1 ea       	ldi	r30, 0xA1	; 161
     872:	f2 e0       	ldi	r31, 0x02	; 2
     874:	20 83       	st	Z, r18
     876:	2f ef       	ldi	r18, 0xFF	; 255
     878:	f4 01       	movw	r30, r8
     87a:	20 83       	st	Z, r18
     87c:	20 ef       	ldi	r18, 0xF0	; 240
     87e:	ee e8       	ldi	r30, 0x8E	; 142
     880:	f2 e0       	ldi	r31, 0x02	; 2
     882:	20 83       	st	Z, r18
     884:	8e c0       	rjmp	.+284    	; 0x9a2 <Matrix_Display+0x50a>
     886:	8c 31       	cpi	r24, 0x1C	; 28
     888:	91 05       	cpc	r25, r1
     88a:	7c f4       	brge	.+30     	; 0x8aa <Matrix_Display+0x412>
     88c:	23 ee       	ldi	r18, 0xE3	; 227
     88e:	f5 01       	movw	r30, r10
     890:	20 83       	st	Z, r18
     892:	2d ef       	ldi	r18, 0xFD	; 253
     894:	e1 ea       	ldi	r30, 0xA1	; 161
     896:	f2 e0       	ldi	r31, 0x02	; 2
     898:	20 83       	st	Z, r18
     89a:	2f ef       	ldi	r18, 0xFF	; 255
     89c:	f4 01       	movw	r30, r8
     89e:	20 83       	st	Z, r18
     8a0:	2c ef       	ldi	r18, 0xFC	; 252
     8a2:	ee e8       	ldi	r30, 0x8E	; 142
     8a4:	f2 e0       	ldi	r31, 0x02	; 2
     8a6:	20 83       	st	Z, r18
     8a8:	7c c0       	rjmp	.+248    	; 0x9a2 <Matrix_Display+0x50a>
     8aa:	8d 31       	cpi	r24, 0x1D	; 29
     8ac:	91 05       	cpc	r25, r1
     8ae:	7c f4       	brge	.+30     	; 0x8ce <Matrix_Display+0x436>
     8b0:	23 ee       	ldi	r18, 0xE3	; 227
     8b2:	f5 01       	movw	r30, r10
     8b4:	20 83       	st	Z, r18
     8b6:	2d ef       	ldi	r18, 0xFD	; 253
     8b8:	e1 ea       	ldi	r30, 0xA1	; 161
     8ba:	f2 e0       	ldi	r31, 0x02	; 2
     8bc:	20 83       	st	Z, r18
     8be:	2f ef       	ldi	r18, 0xFF	; 255
     8c0:	f4 01       	movw	r30, r8
     8c2:	20 83       	st	Z, r18
     8c4:	2e ef       	ldi	r18, 0xFE	; 254
     8c6:	ee e8       	ldi	r30, 0x8E	; 142
     8c8:	f2 e0       	ldi	r31, 0x02	; 2
     8ca:	20 83       	st	Z, r18
     8cc:	6a c0       	rjmp	.+212    	; 0x9a2 <Matrix_Display+0x50a>
     8ce:	8e 31       	cpi	r24, 0x1E	; 30
     8d0:	91 05       	cpc	r25, r1
     8d2:	6c f4       	brge	.+26     	; 0x8ee <Matrix_Display+0x456>
     8d4:	21 ee       	ldi	r18, 0xE1	; 225
     8d6:	f5 01       	movw	r30, r10
     8d8:	20 83       	st	Z, r18
     8da:	e1 ea       	ldi	r30, 0xA1	; 161
     8dc:	f2 e0       	ldi	r31, 0x02	; 2
     8de:	20 83       	st	Z, r18
     8e0:	2f ef       	ldi	r18, 0xFF	; 255
     8e2:	f4 01       	movw	r30, r8
     8e4:	20 83       	st	Z, r18
     8e6:	ee e8       	ldi	r30, 0x8E	; 142
     8e8:	f2 e0       	ldi	r31, 0x02	; 2
     8ea:	20 83       	st	Z, r18
     8ec:	5a c0       	rjmp	.+180    	; 0x9a2 <Matrix_Display+0x50a>
     8ee:	8f 31       	cpi	r24, 0x1F	; 31
     8f0:	91 05       	cpc	r25, r1
     8f2:	74 f4       	brge	.+28     	; 0x910 <Matrix_Display+0x478>
     8f4:	21 ee       	ldi	r18, 0xE1	; 225
     8f6:	f5 01       	movw	r30, r10
     8f8:	20 83       	st	Z, r18
     8fa:	2e ef       	ldi	r18, 0xFE	; 254
     8fc:	e1 ea       	ldi	r30, 0xA1	; 161
     8fe:	f2 e0       	ldi	r31, 0x02	; 2
     900:	20 83       	st	Z, r18
     902:	2f ef       	ldi	r18, 0xFF	; 255
     904:	f4 01       	movw	r30, r8
     906:	20 83       	st	Z, r18
     908:	ee e8       	ldi	r30, 0x8E	; 142
     90a:	f2 e0       	ldi	r31, 0x02	; 2
     90c:	20 82       	st	Z, r2
     90e:	49 c0       	rjmp	.+146    	; 0x9a2 <Matrix_Display+0x50a>
     910:	80 32       	cpi	r24, 0x20	; 32
     912:	91 05       	cpc	r25, r1
     914:	7c f4       	brge	.+30     	; 0x934 <Matrix_Display+0x49c>
     916:	21 ee       	ldi	r18, 0xE1	; 225
     918:	f5 01       	movw	r30, r10
     91a:	20 83       	st	Z, r18
     91c:	2e ef       	ldi	r18, 0xFE	; 254
     91e:	e1 ea       	ldi	r30, 0xA1	; 161
     920:	f2 e0       	ldi	r31, 0x02	; 2
     922:	20 83       	st	Z, r18
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	f4 01       	movw	r30, r8
     928:	20 83       	st	Z, r18
     92a:	20 ec       	ldi	r18, 0xC0	; 192
     92c:	ee e8       	ldi	r30, 0x8E	; 142
     92e:	f2 e0       	ldi	r31, 0x02	; 2
     930:	20 83       	st	Z, r18
     932:	37 c0       	rjmp	.+110    	; 0x9a2 <Matrix_Display+0x50a>
     934:	81 32       	cpi	r24, 0x21	; 33
     936:	91 05       	cpc	r25, r1
     938:	7c f4       	brge	.+30     	; 0x958 <Matrix_Display+0x4c0>
     93a:	21 ee       	ldi	r18, 0xE1	; 225
     93c:	f5 01       	movw	r30, r10
     93e:	20 83       	st	Z, r18
     940:	2e ef       	ldi	r18, 0xFE	; 254
     942:	e1 ea       	ldi	r30, 0xA1	; 161
     944:	f2 e0       	ldi	r31, 0x02	; 2
     946:	20 83       	st	Z, r18
     948:	2f ef       	ldi	r18, 0xFF	; 255
     94a:	f4 01       	movw	r30, r8
     94c:	20 83       	st	Z, r18
     94e:	20 ef       	ldi	r18, 0xF0	; 240
     950:	ee e8       	ldi	r30, 0x8E	; 142
     952:	f2 e0       	ldi	r31, 0x02	; 2
     954:	20 83       	st	Z, r18
     956:	25 c0       	rjmp	.+74     	; 0x9a2 <Matrix_Display+0x50a>
     958:	82 32       	cpi	r24, 0x22	; 34
     95a:	91 05       	cpc	r25, r1
     95c:	7c f4       	brge	.+30     	; 0x97c <Matrix_Display+0x4e4>
     95e:	21 ee       	ldi	r18, 0xE1	; 225
     960:	f5 01       	movw	r30, r10
     962:	20 83       	st	Z, r18
     964:	2e ef       	ldi	r18, 0xFE	; 254
     966:	e1 ea       	ldi	r30, 0xA1	; 161
     968:	f2 e0       	ldi	r31, 0x02	; 2
     96a:	20 83       	st	Z, r18
     96c:	2f ef       	ldi	r18, 0xFF	; 255
     96e:	f4 01       	movw	r30, r8
     970:	20 83       	st	Z, r18
     972:	2c ef       	ldi	r18, 0xFC	; 252
     974:	ee e8       	ldi	r30, 0x8E	; 142
     976:	f2 e0       	ldi	r31, 0x02	; 2
     978:	20 83       	st	Z, r18
     97a:	13 c0       	rjmp	.+38     	; 0x9a2 <Matrix_Display+0x50a>
     97c:	85 32       	cpi	r24, 0x25	; 37
     97e:	91 05       	cpc	r25, r1
     980:	0c f0       	brlt	.+2      	; 0x984 <Matrix_Display+0x4ec>
     982:	4e c0       	rjmp	.+156    	; 0xa20 <Matrix_Display+0x588>
     984:	f5 01       	movw	r30, r10
     986:	10 82       	st	Z, r1
     988:	e1 ea       	ldi	r30, 0xA1	; 161
     98a:	f2 e0       	ldi	r31, 0x02	; 2
     98c:	10 82       	st	Z, r1
     98e:	2f ef       	ldi	r18, 0xFF	; 255
     990:	f4 01       	movw	r30, r8
     992:	20 83       	st	Z, r18
     994:	ee e8       	ldi	r30, 0x8E	; 142
     996:	f2 e0       	ldi	r31, 0x02	; 2
     998:	20 83       	st	Z, r18
     99a:	03 c0       	rjmp	.+6      	; 0x9a2 <Matrix_Display+0x50a>
     99c:	8e 30       	cpi	r24, 0x0E	; 14
     99e:	91 05       	cpc	r25, r1
     9a0:	7c f0       	brlt	.+30     	; 0x9c0 <Matrix_Display+0x528>
     9a2:	8f 30       	cpi	r24, 0x0F	; 15
     9a4:	91 05       	cpc	r25, r1
     9a6:	61 f0       	breq	.+24     	; 0x9c0 <Matrix_Display+0x528>
     9a8:	9c 01       	movw	r18, r24
     9aa:	23 51       	subi	r18, 0x13	; 19
     9ac:	31 09       	sbc	r19, r1
     9ae:	22 30       	cpi	r18, 0x02	; 2
     9b0:	31 05       	cpc	r19, r1
     9b2:	30 f0       	brcs	.+12     	; 0x9c0 <Matrix_Display+0x528>
     9b4:	89 31       	cpi	r24, 0x19	; 25
     9b6:	91 05       	cpc	r25, r1
     9b8:	19 f0       	breq	.+6      	; 0x9c0 <Matrix_Display+0x528>
     9ba:	81 97       	sbiw	r24, 0x21	; 33
     9bc:	04 97       	sbiw	r24, 0x04	; 4
     9be:	38 f4       	brcc	.+14     	; 0x9ce <Matrix_Display+0x536>
     9c0:	f5 01       	movw	r30, r10
     9c2:	80 81       	ld	r24, Z
     9c4:	29 dd       	rcall	.-1454   	; 0x418 <transmit_data>
     9c6:	f4 01       	movw	r30, r8
     9c8:	80 81       	ld	r24, Z
     9ca:	46 dd       	rcall	.-1396   	; 0x458 <transmit_data2>
     9cc:	0b c0       	rjmp	.+22     	; 0x9e4 <Matrix_Display+0x54c>
     9ce:	eb 81       	ldd	r30, Y+3	; 0x03
     9d0:	fc 81       	ldd	r31, Y+4	; 0x04
     9d2:	e0 56       	subi	r30, 0x60	; 96
     9d4:	fd 4f       	sbci	r31, 0xFD	; 253
     9d6:	80 81       	ld	r24, Z
     9d8:	1f dd       	rcall	.-1474   	; 0x418 <transmit_data>
     9da:	f8 01       	movw	r30, r16
     9dc:	e3 57       	subi	r30, 0x73	; 115
     9de:	fd 4f       	sbci	r31, 0xFD	; 253
     9e0:	80 81       	ld	r24, Z
     9e2:	3a dd       	rcall	.-1420   	; 0x458 <transmit_data2>
     9e4:	fa e0       	ldi	r31, 0x0A	; 10
     9e6:	cf 16       	cp	r12, r31
     9e8:	d1 04       	cpc	r13, r1
     9ea:	19 f0       	breq	.+6      	; 0x9f2 <Matrix_Display+0x55a>
     9ec:	2f ef       	ldi	r18, 0xFF	; 255
     9ee:	e2 1a       	sub	r14, r18
     9f0:	f2 0a       	sbc	r15, r18
     9f2:	4b 81       	ldd	r20, Y+3	; 0x03
     9f4:	5c 81       	ldd	r21, Y+4	; 0x04
     9f6:	4f 5f       	subi	r20, 0xFF	; 255
     9f8:	5f 4f       	sbci	r21, 0xFF	; 255
     9fa:	5c 83       	std	Y+4, r21	; 0x04
     9fc:	4b 83       	std	Y+3, r20	; 0x03
     9fe:	0f 5f       	subi	r16, 0xFF	; 255
     a00:	1f 4f       	sbci	r17, 0xFF	; 255
     a02:	50 ed       	ldi	r21, 0xD0	; 208
     a04:	e5 16       	cp	r14, r21
     a06:	57 e0       	ldi	r21, 0x07	; 7
     a08:	f5 06       	cpc	r15, r21
     a0a:	29 f4       	brne	.+10     	; 0xa16 <Matrix_Display+0x57e>
     a0c:	8f ef       	ldi	r24, 0xFF	; 255
     a0e:	68 1a       	sub	r6, r24
     a10:	78 0a       	sbc	r7, r24
     a12:	e4 2c       	mov	r14, r4
     a14:	f5 2c       	mov	r15, r5
     a16:	c6 14       	cp	r12, r6
     a18:	d7 04       	cpc	r13, r7
     a1a:	09 f0       	breq	.+2      	; 0xa1e <Matrix_Display+0x586>
     a1c:	7f cd       	rjmp	.-1282   	; 0x51c <Matrix_Display+0x84>
     a1e:	03 c0       	rjmp	.+6      	; 0xa26 <Matrix_Display+0x58e>
     a20:	69 80       	ldd	r6, Y+1	; 0x01
     a22:	7a 80       	ldd	r7, Y+2	; 0x02
     a24:	be cf       	rjmp	.-132    	; 0x9a2 <Matrix_Display+0x50a>
     a26:	0f 90       	pop	r0
     a28:	0f 90       	pop	r0
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	ff 90       	pop	r15
     a38:	ef 90       	pop	r14
     a3a:	df 90       	pop	r13
     a3c:	cf 90       	pop	r12
     a3e:	bf 90       	pop	r11
     a40:	af 90       	pop	r10
     a42:	9f 90       	pop	r9
     a44:	8f 90       	pop	r8
     a46:	7f 90       	pop	r7
     a48:	6f 90       	pop	r6
     a4a:	5f 90       	pop	r5
     a4c:	4f 90       	pop	r4
     a4e:	3f 90       	pop	r3
     a50:	2f 90       	pop	r2
     a52:	08 95       	ret

00000a54 <AddWater>:
	char add_timer;
	int pump_duration=0;
	int temp_flag=1;
	while(temp_flag)
	{
		LCD_DisplayString_nclear(1,"H20 Amount Low:1Med:2 Full:3" );
     a54:	69 e0       	ldi	r22, 0x09	; 9
     a56:	71 e0       	ldi	r23, 0x01	; 1
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	c7 db       	rcall	.-2162   	; 0x1ea <LCD_DisplayString_nclear>
		add_timer=GetKeypadKey();
     a5c:	8f dc       	rcall	.-1762   	; 0x37c <GetKeypadKey>
		if ( add_timer=='1')
     a5e:	81 33       	cpi	r24, 0x31	; 49
     a60:	41 f4       	brne	.+16     	; 0xa72 <AddWater+0x1e>
		{
			LCD_ClearScreen();
     a62:	a0 db       	rcall	.-2240   	; 0x1a4 <LCD_ClearScreen>
			LCD_DisplayString_nclear(1,"Adding Small    Amount of Water");
     a64:	66 e2       	ldi	r22, 0x26	; 38
     a66:	71 e0       	ldi	r23, 0x01	; 1
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	bf db       	rcall	.-2178   	; 0x1ea <LCD_DisplayString_nclear>
			pump_duration=2;
     a6c:	82 e0       	ldi	r24, 0x02	; 2
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	13 c0       	rjmp	.+38     	; 0xa98 <AddWater+0x44>
			temp_flag=0;
		}
		else if (add_timer=='2')
     a72:	82 33       	cpi	r24, 0x32	; 50
     a74:	41 f4       	brne	.+16     	; 0xa86 <AddWater+0x32>
		{
			LCD_ClearScreen();
     a76:	96 db       	rcall	.-2260   	; 0x1a4 <LCD_ClearScreen>
			LCD_DisplayString_nclear(1,"Adding Medium   Amount of Water");
     a78:	66 e4       	ldi	r22, 0x46	; 70
     a7a:	71 e0       	ldi	r23, 0x01	; 1
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	b5 db       	rcall	.-2198   	; 0x1ea <LCD_DisplayString_nclear>
			pump_duration=4;
     a80:	84 e0       	ldi	r24, 0x04	; 4
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	09 c0       	rjmp	.+18     	; 0xa98 <AddWater+0x44>
			temp_flag=0;
		}
		else if (add_timer=='3')
     a86:	83 33       	cpi	r24, 0x33	; 51
     a88:	29 f7       	brne	.-54     	; 0xa54 <AddWater>
		{
			LCD_ClearScreen();
     a8a:	8c db       	rcall	.-2280   	; 0x1a4 <LCD_ClearScreen>
			LCD_DisplayString_nclear(1,"Adding Maximum  Amount of Water");
     a8c:	66 e6       	ldi	r22, 0x66	; 102
     a8e:	71 e0       	ldi	r23, 0x01	; 1
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	ab db       	rcall	.-2218   	; 0x1ea <LCD_DisplayString_nclear>
			pump_duration=10;
     a94:	8a e0       	ldi	r24, 0x0A	; 10
     a96:	90 e0       	ldi	r25, 0x00	; 0
			temp_flag=0;
		}
	}
	Matrix_Display(pump_duration,port);
     a98:	68 e0       	ldi	r22, 0x08	; 8
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	fd dc       	rcall	.-1542   	; 0x498 <Matrix_Display>
	LCD_ClearScreen();
     a9e:	82 db       	rcall	.-2300   	; 0x1a4 <LCD_ClearScreen>
	PORTB=0x00;
     aa0:	15 b8       	out	0x05, r1	; 5
     aa2:	08 95       	ret

00000aa4 <RemoveWater>:
	int port=0x10;
	int pump_duration=0;
	int temp_flag=1;
	while(temp_flag)
	{
		LCD_DisplayString_nclear(1,"H20 Amount Low:4Med:5 Full:6" );
     aa4:	66 e8       	ldi	r22, 0x86	; 134
     aa6:	71 e0       	ldi	r23, 0x01	; 1
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	9f db       	rcall	.-2242   	; 0x1ea <LCD_DisplayString_nclear>
		add_timer=GetKeypadKey();
     aac:	67 dc       	rcall	.-1842   	; 0x37c <GetKeypadKey>
		if ( add_timer=='4')
     aae:	84 33       	cpi	r24, 0x34	; 52
     ab0:	41 f4       	brne	.+16     	; 0xac2 <RemoveWater+0x1e>
		{
			LCD_ClearScreen();
     ab2:	78 db       	rcall	.-2320   	; 0x1a4 <LCD_ClearScreen>
			LCD_DisplayString_nclear(1,"Removing Small  Amount of Water");
     ab4:	63 ea       	ldi	r22, 0xA3	; 163
     ab6:	71 e0       	ldi	r23, 0x01	; 1
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	97 db       	rcall	.-2258   	; 0x1ea <LCD_DisplayString_nclear>
			pump_duration=1;
     abc:	81 e0       	ldi	r24, 0x01	; 1
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	13 c0       	rjmp	.+38     	; 0xae8 <RemoveWater+0x44>
			temp_flag=0;
		}
		else if (add_timer=='5')
     ac2:	85 33       	cpi	r24, 0x35	; 53
     ac4:	41 f4       	brne	.+16     	; 0xad6 <RemoveWater+0x32>
		{
			LCD_ClearScreen();
     ac6:	6e db       	rcall	.-2340   	; 0x1a4 <LCD_ClearScreen>
			LCD_DisplayString_nclear(1,"Removing Medium Amount of Water");
     ac8:	63 ec       	ldi	r22, 0xC3	; 195
     aca:	71 e0       	ldi	r23, 0x01	; 1
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	8d db       	rcall	.-2278   	; 0x1ea <LCD_DisplayString_nclear>
			pump_duration=2;
     ad0:	82 e0       	ldi	r24, 0x02	; 2
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	09 c0       	rjmp	.+18     	; 0xae8 <RemoveWater+0x44>
			temp_flag=0;
		}
		else if (add_timer=='6')
     ad6:	86 33       	cpi	r24, 0x36	; 54
     ad8:	29 f7       	brne	.-54     	; 0xaa4 <RemoveWater>
		{
			LCD_ClearScreen();
     ada:	64 db       	rcall	.-2360   	; 0x1a4 <LCD_ClearScreen>
			LCD_DisplayString_nclear(1,"Removing MaximumAmount of Water");
     adc:	63 ee       	ldi	r22, 0xE3	; 227
     ade:	71 e0       	ldi	r23, 0x01	; 1
     ae0:	81 e0       	ldi	r24, 0x01	; 1
     ae2:	83 db       	rcall	.-2298   	; 0x1ea <LCD_DisplayString_nclear>
			pump_duration=3;
     ae4:	83 e0       	ldi	r24, 0x03	; 3
     ae6:	90 e0       	ldi	r25, 0x00	; 0
			temp_flag=0;
		}
	}
	
	Matrix_Display(pump_duration,port);
     ae8:	60 e1       	ldi	r22, 0x10	; 16
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	d5 dc       	rcall	.-1622   	; 0x498 <Matrix_Display>
	LCD_ClearScreen();
     aee:	5a db       	rcall	.-2380   	; 0x1a4 <LCD_ClearScreen>
	PORTB=0x00;
     af0:	15 b8       	out	0x05, r1	; 5
     af2:	08 95       	ret

00000af4 <main>:
//Flags
int flag=0;

int main(void) 
{ 
  DDRA = 0xFF;
     af4:	8f ef       	ldi	r24, 0xFF	; 255
     af6:	81 b9       	out	0x01, r24	; 1
  DDRB = 0xFF;
     af8:	84 b9       	out	0x04, r24	; 4
  DDRD = 0xFB;
     afa:	8b ef       	ldi	r24, 0xFB	; 251
     afc:	8a b9       	out	0x0a, r24	; 10
  DDRC = 0xF0; PORTC = 0x0F; //keypadS
     afe:	80 ef       	ldi	r24, 0xF0	; 240
     b00:	87 b9       	out	0x07, r24	; 7
     b02:	8f e0       	ldi	r24, 0x0F	; 15
     b04:	88 b9       	out	0x08, r24	; 8
  LCD_init();
     b06:	51 db       	rcall	.-2398   	; 0x1aa <LCD_init>
  delay_ms(50);
     b08:	82 e3       	ldi	r24, 0x32	; 50
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	2b db       	rcall	.-2474   	; 0x164 <delay_ms>
  init_HC_SR04();
     b0e:	2e dc       	rcall	.-1956   	; 0x36c <init_HC_SR04>
  LCD_DisplayString(1,"Liquid Level    Sensor");
     b10:	63 e0       	ldi	r22, 0x03	; 3
     b12:	72 e0       	ldi	r23, 0x02	; 2
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	7f db       	rcall	.-2306   	; 0x216 <LCD_DisplayString>
  delay_ms(200);
     b18:	88 ec       	ldi	r24, 0xC8	; 200
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	23 db       	rcall	.-2490   	; 0x164 <delay_ms>
  LCD_ClearScreen();
     b1e:	42 db       	rcall	.-2428   	; 0x1a4 <LCD_ClearScreen>
  TCCR1B = 0;
     b20:	10 92 81 00 	sts	0x0081, r1
  TCNT1 = 0;
     b24:	10 92 85 00 	sts	0x0085, r1
     b28:	10 92 84 00 	sts	0x0084, r1
 char option;
 int screen=0;		
 int Restart_flag=1;
     b2c:	c1 e0       	ldi	r28, 0x01	; 1
     b2e:	d0 e0       	ldi	r29, 0x00	; 0
	{
		
		AddWater();
		transmit_data(0xFF);
		transmit_data2(0x00);
		Restart_flag=1;
     b30:	00 e0       	ldi	r16, 0x00	; 0
     b32:	10 e0       	ldi	r17, 0x00	; 0
			Distance_Converter();	
			option=GetKeypadKey();
		}
		LCD_ClearScreen();
		Centimeter_flag=0;
		Restart_flag=1;
     b34:	ee 24       	eor	r14, r14
     b36:	e3 94       	inc	r14
     b38:	f1 2c       	mov	r15, r1
 int Centimeter_flag=0;			//		  C
 int Inches_flag=0;				//		  D

 while(1)
 {
	 option=GetKeypadKey();
     b3a:	20 dc       	rcall	.-1984   	; 0x37c <GetKeypadKey>
	
	 if(Restart_flag)
     b3c:	cd 2b       	or	r28, r29
     b3e:	29 f0       	breq	.+10     	; 0xb4a <main+0x56>
	 {
		  
		 LCD_DisplayString_nclear(1,"ADD:A Remove:B  H20 Level:C");
     b40:	6a e1       	ldi	r22, 0x1A	; 26
     b42:	72 e0       	ldi	r23, 0x02	; 2
     b44:	81 e0       	ldi	r24, 0x01	; 1
     b46:	51 db       	rcall	.-2398   	; 0x1ea <LCD_DisplayString_nclear>
     b48:	25 c0       	rjmp	.+74     	; 0xb94 <main+0xa0>
		 Restart_flag=0;
	 }
	 else if(option=='A')
     b4a:	81 34       	cpi	r24, 0x41	; 65
     b4c:	49 f4       	brne	.+18     	; 0xb60 <main+0x6c>
	{
		Addwater_flag=1;
		Restart_flag=0;
		LCD_ClearScreen();
     b4e:	2a db       	rcall	.-2476   	; 0x1a4 <LCD_ClearScreen>

// Menu Choice (flags)
	if(Addwater_flag)
	{
		
		AddWater();
     b50:	81 df       	rcall	.-254    	; 0xa54 <AddWater>
		transmit_data(0xFF);
     b52:	8f ef       	ldi	r24, 0xFF	; 255
     b54:	61 dc       	rcall	.-1854   	; 0x418 <transmit_data>
		transmit_data2(0x00);
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	7f dc       	rcall	.-1794   	; 0x458 <transmit_data2>
		Restart_flag=1;
     b5a:	ce 2d       	mov	r28, r14
     b5c:	df 2d       	mov	r29, r15
     b5e:	ed cf       	rjmp	.-38     	; 0xb3a <main+0x46>
	{
		Addwater_flag=1;
		Restart_flag=0;
		LCD_ClearScreen();
	}
	else if(option=='B')
     b60:	82 34       	cpi	r24, 0x42	; 66
     b62:	49 f4       	brne	.+18     	; 0xb76 <main+0x82>
	{
		Removewater_flag=1;
		Restart_flag=0;
		LCD_ClearScreen();
     b64:	1f db       	rcall	.-2498   	; 0x1a4 <LCD_ClearScreen>
		Centimeter_flag=0;
		Restart_flag=1;
	}
	else if(Removewater_flag)
	{
		RemoveWater();
     b66:	9e df       	rcall	.-196    	; 0xaa4 <RemoveWater>
		transmit_data(0xFF);
     b68:	8f ef       	ldi	r24, 0xFF	; 255
     b6a:	56 dc       	rcall	.-1876   	; 0x418 <transmit_data>
		transmit_data2(0x00);
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	74 dc       	rcall	.-1816   	; 0x458 <transmit_data2>
		Restart_flag=1;
     b70:	ce 2d       	mov	r28, r14
     b72:	df 2d       	mov	r29, r15
     b74:	e2 cf       	rjmp	.-60     	; 0xb3a <main+0x46>
	{
		Removewater_flag=1;
		Restart_flag=0;
		LCD_ClearScreen();
	}
	else if(option=='C')
     b76:	83 34       	cpi	r24, 0x43	; 67
     b78:	69 f4       	brne	.+26     	; 0xb94 <main+0xa0>
	{
		Centimeter_flag=1;
		Restart_flag=0;
		LCD_ClearScreen();
     b7a:	14 db       	rcall	.-2520   	; 0x1a4 <LCD_ClearScreen>
		Addwater_flag=0;
		
	}
	else if(Centimeter_flag)
	{
		LCD_DisplayString_nclear(1,"Distance to     water in cm:");
     b7c:	66 e3       	ldi	r22, 0x36	; 54
     b7e:	72 e0       	ldi	r23, 0x02	; 2
     b80:	81 e0       	ldi	r24, 0x01	; 1
     b82:	33 db       	rcall	.-2458   	; 0x1ea <LCD_DisplayString_nclear>
		while(option !='*')
		{
			Distance_Converter();	
     b84:	9a db       	rcall	.-2252   	; 0x2ba <Distance_Converter>
			option=GetKeypadKey();
     b86:	fa db       	rcall	.-2060   	; 0x37c <GetKeypadKey>
		
	}
	else if(Centimeter_flag)
	{
		LCD_DisplayString_nclear(1,"Distance to     water in cm:");
		while(option !='*')
     b88:	8a 32       	cpi	r24, 0x2A	; 42
     b8a:	e1 f7       	brne	.-8      	; 0xb84 <main+0x90>
		{
			Distance_Converter();	
			option=GetKeypadKey();
		}
		LCD_ClearScreen();
     b8c:	0b db       	rcall	.-2538   	; 0x1a4 <LCD_ClearScreen>
		Centimeter_flag=0;
		Restart_flag=1;
     b8e:	ce 2d       	mov	r28, r14
     b90:	df 2d       	mov	r29, r15
     b92:	d3 cf       	rjmp	.-90     	; 0xb3a <main+0x46>
	{
		
		AddWater();
		transmit_data(0xFF);
		transmit_data2(0x00);
		Restart_flag=1;
     b94:	c0 2f       	mov	r28, r16
     b96:	d1 2f       	mov	r29, r17
     b98:	d0 cf       	rjmp	.-96     	; 0xb3a <main+0x46>

00000b9a <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( naked ) );
void vPortYieldFromTick( void )
{
	portSAVE_CONTEXT();
     b9a:	0f 92       	push	r0
     b9c:	0f b6       	in	r0, 0x3f	; 63
     b9e:	f8 94       	cli
     ba0:	0f 92       	push	r0
     ba2:	1f 92       	push	r1
     ba4:	11 24       	eor	r1, r1
     ba6:	2f 92       	push	r2
     ba8:	3f 92       	push	r3
     baa:	4f 92       	push	r4
     bac:	5f 92       	push	r5
     bae:	6f 92       	push	r6
     bb0:	7f 92       	push	r7
     bb2:	8f 92       	push	r8
     bb4:	9f 92       	push	r9
     bb6:	af 92       	push	r10
     bb8:	bf 92       	push	r11
     bba:	cf 92       	push	r12
     bbc:	df 92       	push	r13
     bbe:	ef 92       	push	r14
     bc0:	ff 92       	push	r15
     bc2:	0f 93       	push	r16
     bc4:	1f 93       	push	r17
     bc6:	2f 93       	push	r18
     bc8:	3f 93       	push	r19
     bca:	4f 93       	push	r20
     bcc:	5f 93       	push	r21
     bce:	6f 93       	push	r22
     bd0:	7f 93       	push	r23
     bd2:	8f 93       	push	r24
     bd4:	9f 93       	push	r25
     bd6:	af 93       	push	r26
     bd8:	bf 93       	push	r27
     bda:	cf 93       	push	r28
     bdc:	df 93       	push	r29
     bde:	ef 93       	push	r30
     be0:	ff 93       	push	r31
     be2:	a0 91 89 02 	lds	r26, 0x0289
     be6:	b0 91 8a 02 	lds	r27, 0x028A
     bea:	0d b6       	in	r0, 0x3d	; 61
     bec:	0d 92       	st	X+, r0
     bee:	0e b6       	in	r0, 0x3e	; 62
     bf0:	0d 92       	st	X+, r0
	vTaskIncrementTick();
     bf2:	2e d0       	rcall	.+92     	; 0xc50 <vTaskIncrementTick>
	vTaskSwitchContext();
     bf4:	ee d0       	rcall	.+476    	; 0xdd2 <vTaskSwitchContext>
	portRESTORE_CONTEXT();
     bf6:	a0 91 89 02 	lds	r26, 0x0289
     bfa:	b0 91 8a 02 	lds	r27, 0x028A
     bfe:	cd 91       	ld	r28, X+
     c00:	cd bf       	out	0x3d, r28	; 61
     c02:	dd 91       	ld	r29, X+
     c04:	de bf       	out	0x3e, r29	; 62
     c06:	ff 91       	pop	r31
     c08:	ef 91       	pop	r30
     c0a:	df 91       	pop	r29
     c0c:	cf 91       	pop	r28
     c0e:	bf 91       	pop	r27
     c10:	af 91       	pop	r26
     c12:	9f 91       	pop	r25
     c14:	8f 91       	pop	r24
     c16:	7f 91       	pop	r23
     c18:	6f 91       	pop	r22
     c1a:	5f 91       	pop	r21
     c1c:	4f 91       	pop	r20
     c1e:	3f 91       	pop	r19
     c20:	2f 91       	pop	r18
     c22:	1f 91       	pop	r17
     c24:	0f 91       	pop	r16
     c26:	ff 90       	pop	r15
     c28:	ef 90       	pop	r14
     c2a:	df 90       	pop	r13
     c2c:	cf 90       	pop	r12
     c2e:	bf 90       	pop	r11
     c30:	af 90       	pop	r10
     c32:	9f 90       	pop	r9
     c34:	8f 90       	pop	r8
     c36:	7f 90       	pop	r7
     c38:	6f 90       	pop	r6
     c3a:	5f 90       	pop	r5
     c3c:	4f 90       	pop	r4
     c3e:	3f 90       	pop	r3
     c40:	2f 90       	pop	r2
     c42:	1f 90       	pop	r1
     c44:	0f 90       	pop	r0
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	0f 90       	pop	r0

	asm volatile ( "ret" );
     c4a:	08 95       	ret

00000c4c <__vector_13>:
	 * count is incremented after the context is saved.
	 */
	void TIMER1_COMPA_vect( void ) __attribute__ ( ( signal, naked ) );
	void TIMER1_COMPA_vect( void )
	{
		vPortYieldFromTick();
     c4c:	a6 df       	rcall	.-180    	; 0xb9a <vPortYieldFromTick>
		asm volatile ( "reti" );
     c4e:	18 95       	reti

00000c50 <vTaskIncrementTick>:
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
			{
				taskYIELD();
     c50:	0f 93       	push	r16
     c52:	1f 93       	push	r17
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	80 91 5d 02 	lds	r24, 0x025D
     c5c:	81 11       	cpse	r24, r1
     c5e:	af c0       	rjmp	.+350    	; 0xdbe <vTaskIncrementTick+0x16e>
     c60:	80 91 5f 02 	lds	r24, 0x025F
     c64:	90 91 60 02 	lds	r25, 0x0260
     c68:	01 96       	adiw	r24, 0x01	; 1
     c6a:	90 93 60 02 	sts	0x0260, r25
     c6e:	80 93 5f 02 	sts	0x025F, r24
     c72:	80 91 5f 02 	lds	r24, 0x025F
     c76:	90 91 60 02 	lds	r25, 0x0260
     c7a:	89 2b       	or	r24, r25
     c7c:	99 f5       	brne	.+102    	; 0xce4 <vTaskIncrementTick+0x94>
     c7e:	80 91 63 02 	lds	r24, 0x0263
     c82:	90 91 64 02 	lds	r25, 0x0264
     c86:	20 91 61 02 	lds	r18, 0x0261
     c8a:	30 91 62 02 	lds	r19, 0x0262
     c8e:	30 93 64 02 	sts	0x0264, r19
     c92:	20 93 63 02 	sts	0x0263, r18
     c96:	90 93 62 02 	sts	0x0262, r25
     c9a:	80 93 61 02 	sts	0x0261, r24
     c9e:	80 91 5a 02 	lds	r24, 0x025A
     ca2:	8f 5f       	subi	r24, 0xFF	; 255
     ca4:	80 93 5a 02 	sts	0x025A, r24
     ca8:	e0 91 63 02 	lds	r30, 0x0263
     cac:	f0 91 64 02 	lds	r31, 0x0264
     cb0:	80 81       	ld	r24, Z
     cb2:	81 11       	cpse	r24, r1
     cb4:	07 c0       	rjmp	.+14     	; 0xcc4 <vTaskIncrementTick+0x74>
     cb6:	8f ef       	ldi	r24, 0xFF	; 255
     cb8:	9f ef       	ldi	r25, 0xFF	; 255
     cba:	90 93 05 01 	sts	0x0105, r25
     cbe:	80 93 04 01 	sts	0x0104, r24
     cc2:	10 c0       	rjmp	.+32     	; 0xce4 <vTaskIncrementTick+0x94>
     cc4:	e0 91 63 02 	lds	r30, 0x0263
     cc8:	f0 91 64 02 	lds	r31, 0x0264
     ccc:	05 80       	ldd	r0, Z+5	; 0x05
     cce:	f6 81       	ldd	r31, Z+6	; 0x06
     cd0:	e0 2d       	mov	r30, r0
     cd2:	06 80       	ldd	r0, Z+6	; 0x06
     cd4:	f7 81       	ldd	r31, Z+7	; 0x07
     cd6:	e0 2d       	mov	r30, r0
     cd8:	82 81       	ldd	r24, Z+2	; 0x02
     cda:	93 81       	ldd	r25, Z+3	; 0x03
     cdc:	90 93 05 01 	sts	0x0105, r25
     ce0:	80 93 04 01 	sts	0x0104, r24
     ce4:	20 91 5f 02 	lds	r18, 0x025F
     ce8:	30 91 60 02 	lds	r19, 0x0260
     cec:	80 91 04 01 	lds	r24, 0x0104
     cf0:	90 91 05 01 	lds	r25, 0x0105
     cf4:	28 17       	cp	r18, r24
     cf6:	39 07       	cpc	r19, r25
     cf8:	08 f4       	brcc	.+2      	; 0xcfc <vTaskIncrementTick+0xac>
     cfa:	66 c0       	rjmp	.+204    	; 0xdc8 <vTaskIncrementTick+0x178>
     cfc:	e0 91 63 02 	lds	r30, 0x0263
     d00:	f0 91 64 02 	lds	r31, 0x0264
     d04:	80 81       	ld	r24, Z
     d06:	88 23       	and	r24, r24
     d08:	99 f0       	breq	.+38     	; 0xd30 <vTaskIncrementTick+0xe0>
     d0a:	e0 91 63 02 	lds	r30, 0x0263
     d0e:	f0 91 64 02 	lds	r31, 0x0264
     d12:	05 80       	ldd	r0, Z+5	; 0x05
     d14:	f6 81       	ldd	r31, Z+6	; 0x06
     d16:	e0 2d       	mov	r30, r0
     d18:	c6 81       	ldd	r28, Z+6	; 0x06
     d1a:	d7 81       	ldd	r29, Z+7	; 0x07
     d1c:	8a 81       	ldd	r24, Y+2	; 0x02
     d1e:	9b 81       	ldd	r25, Y+3	; 0x03
     d20:	20 91 5f 02 	lds	r18, 0x025F
     d24:	30 91 60 02 	lds	r19, 0x0260
     d28:	28 17       	cp	r18, r24
     d2a:	39 07       	cpc	r19, r25
     d2c:	f8 f4       	brcc	.+62     	; 0xd6c <vTaskIncrementTick+0x11c>
     d2e:	19 c0       	rjmp	.+50     	; 0xd62 <vTaskIncrementTick+0x112>
     d30:	8f ef       	ldi	r24, 0xFF	; 255
     d32:	9f ef       	ldi	r25, 0xFF	; 255
     d34:	90 93 05 01 	sts	0x0105, r25
     d38:	80 93 04 01 	sts	0x0104, r24
     d3c:	45 c0       	rjmp	.+138    	; 0xdc8 <vTaskIncrementTick+0x178>
     d3e:	e0 91 63 02 	lds	r30, 0x0263
     d42:	f0 91 64 02 	lds	r31, 0x0264
     d46:	05 80       	ldd	r0, Z+5	; 0x05
     d48:	f6 81       	ldd	r31, Z+6	; 0x06
     d4a:	e0 2d       	mov	r30, r0
     d4c:	c6 81       	ldd	r28, Z+6	; 0x06
     d4e:	d7 81       	ldd	r29, Z+7	; 0x07
     d50:	8a 81       	ldd	r24, Y+2	; 0x02
     d52:	9b 81       	ldd	r25, Y+3	; 0x03
     d54:	20 91 5f 02 	lds	r18, 0x025F
     d58:	30 91 60 02 	lds	r19, 0x0260
     d5c:	28 17       	cp	r18, r24
     d5e:	39 07       	cpc	r19, r25
     d60:	28 f4       	brcc	.+10     	; 0xd6c <vTaskIncrementTick+0x11c>
     d62:	90 93 05 01 	sts	0x0105, r25
     d66:	80 93 04 01 	sts	0x0104, r24
     d6a:	2e c0       	rjmp	.+92     	; 0xdc8 <vTaskIncrementTick+0x178>
     d6c:	8e 01       	movw	r16, r28
     d6e:	0e 5f       	subi	r16, 0xFE	; 254
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	c8 01       	movw	r24, r16
     d74:	d1 d9       	rcall	.-3166   	; 0x118 <vListRemove>
     d76:	8c 89       	ldd	r24, Y+20	; 0x14
     d78:	9d 89       	ldd	r25, Y+21	; 0x15
     d7a:	89 2b       	or	r24, r25
     d7c:	19 f0       	breq	.+6      	; 0xd84 <vTaskIncrementTick+0x134>
     d7e:	ce 01       	movw	r24, r28
     d80:	0c 96       	adiw	r24, 0x0c	; 12
     d82:	ca d9       	rcall	.-3180   	; 0x118 <vListRemove>
     d84:	8e 89       	ldd	r24, Y+22	; 0x16
     d86:	90 91 5e 02 	lds	r25, 0x025E
     d8a:	98 17       	cp	r25, r24
     d8c:	10 f4       	brcc	.+4      	; 0xd92 <vTaskIncrementTick+0x142>
     d8e:	80 93 5e 02 	sts	0x025E, r24
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	9c 01       	movw	r18, r24
     d96:	22 0f       	add	r18, r18
     d98:	33 1f       	adc	r19, r19
     d9a:	22 0f       	add	r18, r18
     d9c:	33 1f       	adc	r19, r19
     d9e:	22 0f       	add	r18, r18
     da0:	33 1f       	adc	r19, r19
     da2:	82 0f       	add	r24, r18
     da4:	93 1f       	adc	r25, r19
     da6:	b8 01       	movw	r22, r16
     da8:	8b 59       	subi	r24, 0x9B	; 155
     daa:	9d 4f       	sbci	r25, 0xFD	; 253
     dac:	8e d9       	rcall	.-3300   	; 0xca <vListInsertEnd>
     dae:	e0 91 63 02 	lds	r30, 0x0263
     db2:	f0 91 64 02 	lds	r31, 0x0264
     db6:	80 81       	ld	r24, Z
     db8:	81 11       	cpse	r24, r1
     dba:	c1 cf       	rjmp	.-126    	; 0xd3e <vTaskIncrementTick+0xee>
     dbc:	b9 cf       	rjmp	.-142    	; 0xd30 <vTaskIncrementTick+0xe0>
     dbe:	80 91 5c 02 	lds	r24, 0x025C
     dc2:	8f 5f       	subi	r24, 0xFF	; 255
     dc4:	80 93 5c 02 	sts	0x025C, r24
     dc8:	df 91       	pop	r29
     dca:	cf 91       	pop	r28
     dcc:	1f 91       	pop	r17
     dce:	0f 91       	pop	r16
     dd0:	08 95       	ret

00000dd2 <vTaskSwitchContext>:
#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
     dd2:	80 91 5d 02 	lds	r24, 0x025D
     dd6:	81 11       	cpse	r24, r1
     dd8:	13 c0       	rjmp	.+38     	; 0xe00 <vTaskSwitchContext+0x2e>
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
     dda:	80 91 5e 02 	lds	r24, 0x025E
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	fc 01       	movw	r30, r24
     de2:	ee 0f       	add	r30, r30
     de4:	ff 1f       	adc	r31, r31
     de6:	ee 0f       	add	r30, r30
     de8:	ff 1f       	adc	r31, r31
     dea:	ee 0f       	add	r30, r30
     dec:	ff 1f       	adc	r31, r31
     dee:	8e 0f       	add	r24, r30
     df0:	9f 1f       	adc	r25, r31
     df2:	fc 01       	movw	r30, r24
     df4:	eb 59       	subi	r30, 0x9B	; 155
     df6:	fd 4f       	sbci	r31, 0xFD	; 253
     df8:	80 81       	ld	r24, Z
     dfa:	88 23       	and	r24, r24
     dfc:	29 f0       	breq	.+10     	; 0xe08 <vTaskSwitchContext+0x36>
     dfe:	1b c0       	rjmp	.+54     	; 0xe36 <vTaskSwitchContext+0x64>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	80 93 5b 02 	sts	0x025B, r24
     e06:	08 95       	ret
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
		{
			configASSERT( uxTopReadyPriority );
			--uxTopReadyPriority;
     e08:	80 91 5e 02 	lds	r24, 0x025E
     e0c:	81 50       	subi	r24, 0x01	; 1
     e0e:	80 93 5e 02 	sts	0x025E, r24
	
		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
	
		/* Find the highest priority queue that contains ready tasks. */
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
     e12:	80 91 5e 02 	lds	r24, 0x025E
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	fc 01       	movw	r30, r24
     e1a:	ee 0f       	add	r30, r30
     e1c:	ff 1f       	adc	r31, r31
     e1e:	ee 0f       	add	r30, r30
     e20:	ff 1f       	adc	r31, r31
     e22:	ee 0f       	add	r30, r30
     e24:	ff 1f       	adc	r31, r31
     e26:	8e 0f       	add	r24, r30
     e28:	9f 1f       	adc	r25, r31
     e2a:	fc 01       	movw	r30, r24
     e2c:	eb 59       	subi	r30, 0x9B	; 155
     e2e:	fd 4f       	sbci	r31, 0xFD	; 253
     e30:	80 81       	ld	r24, Z
     e32:	88 23       	and	r24, r24
     e34:	49 f3       	breq	.-46     	; 0xe08 <vTaskSwitchContext+0x36>
			--uxTopReadyPriority;
		}
	
		/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the tasks of the
		same priority get an equal share of the processor time. */
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
     e36:	e0 91 5e 02 	lds	r30, 0x025E
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	cf 01       	movw	r24, r30
     e3e:	88 0f       	add	r24, r24
     e40:	99 1f       	adc	r25, r25
     e42:	88 0f       	add	r24, r24
     e44:	99 1f       	adc	r25, r25
     e46:	88 0f       	add	r24, r24
     e48:	99 1f       	adc	r25, r25
     e4a:	e8 0f       	add	r30, r24
     e4c:	f9 1f       	adc	r31, r25
     e4e:	eb 59       	subi	r30, 0x9B	; 155
     e50:	fd 4f       	sbci	r31, 0xFD	; 253
     e52:	a1 81       	ldd	r26, Z+1	; 0x01
     e54:	b2 81       	ldd	r27, Z+2	; 0x02
     e56:	12 96       	adiw	r26, 0x02	; 2
     e58:	0d 90       	ld	r0, X+
     e5a:	bc 91       	ld	r27, X
     e5c:	a0 2d       	mov	r26, r0
     e5e:	b2 83       	std	Z+2, r27	; 0x02
     e60:	a1 83       	std	Z+1, r26	; 0x01
     e62:	cf 01       	movw	r24, r30
     e64:	03 96       	adiw	r24, 0x03	; 3
     e66:	a8 17       	cp	r26, r24
     e68:	b9 07       	cpc	r27, r25
     e6a:	31 f4       	brne	.+12     	; 0xe78 <vTaskSwitchContext+0xa6>
     e6c:	12 96       	adiw	r26, 0x02	; 2
     e6e:	8d 91       	ld	r24, X+
     e70:	9c 91       	ld	r25, X
     e72:	13 97       	sbiw	r26, 0x03	; 3
     e74:	92 83       	std	Z+2, r25	; 0x02
     e76:	81 83       	std	Z+1, r24	; 0x01
     e78:	01 80       	ldd	r0, Z+1	; 0x01
     e7a:	f2 81       	ldd	r31, Z+2	; 0x02
     e7c:	e0 2d       	mov	r30, r0
     e7e:	86 81       	ldd	r24, Z+6	; 0x06
     e80:	97 81       	ldd	r25, Z+7	; 0x07
     e82:	90 93 8a 02 	sts	0x028A, r25
     e86:	80 93 89 02 	sts	0x0289, r24
     e8a:	08 95       	ret

00000e8c <__divsf3>:
     e8c:	0c d0       	rcall	.+24     	; 0xea6 <__divsf3x>
     e8e:	eb c0       	rjmp	.+470    	; 0x1066 <__fp_round>
     e90:	e3 d0       	rcall	.+454    	; 0x1058 <__fp_pscB>
     e92:	40 f0       	brcs	.+16     	; 0xea4 <__divsf3+0x18>
     e94:	da d0       	rcall	.+436    	; 0x104a <__fp_pscA>
     e96:	30 f0       	brcs	.+12     	; 0xea4 <__divsf3+0x18>
     e98:	21 f4       	brne	.+8      	; 0xea2 <__divsf3+0x16>
     e9a:	5f 3f       	cpi	r21, 0xFF	; 255
     e9c:	19 f0       	breq	.+6      	; 0xea4 <__divsf3+0x18>
     e9e:	cc c0       	rjmp	.+408    	; 0x1038 <__fp_inf>
     ea0:	51 11       	cpse	r21, r1
     ea2:	15 c1       	rjmp	.+554    	; 0x10ce <__fp_szero>
     ea4:	cf c0       	rjmp	.+414    	; 0x1044 <__fp_nan>

00000ea6 <__divsf3x>:
     ea6:	f0 d0       	rcall	.+480    	; 0x1088 <__fp_split3>
     ea8:	98 f3       	brcs	.-26     	; 0xe90 <__divsf3+0x4>

00000eaa <__divsf3_pse>:
     eaa:	99 23       	and	r25, r25
     eac:	c9 f3       	breq	.-14     	; 0xea0 <__divsf3+0x14>
     eae:	55 23       	and	r21, r21
     eb0:	b1 f3       	breq	.-20     	; 0xe9e <__divsf3+0x12>
     eb2:	95 1b       	sub	r25, r21
     eb4:	55 0b       	sbc	r21, r21
     eb6:	bb 27       	eor	r27, r27
     eb8:	aa 27       	eor	r26, r26
     eba:	62 17       	cp	r22, r18
     ebc:	73 07       	cpc	r23, r19
     ebe:	84 07       	cpc	r24, r20
     ec0:	38 f0       	brcs	.+14     	; 0xed0 <__divsf3_pse+0x26>
     ec2:	9f 5f       	subi	r25, 0xFF	; 255
     ec4:	5f 4f       	sbci	r21, 0xFF	; 255
     ec6:	22 0f       	add	r18, r18
     ec8:	33 1f       	adc	r19, r19
     eca:	44 1f       	adc	r20, r20
     ecc:	aa 1f       	adc	r26, r26
     ece:	a9 f3       	breq	.-22     	; 0xeba <__divsf3_pse+0x10>
     ed0:	33 d0       	rcall	.+102    	; 0xf38 <__divsf3_pse+0x8e>
     ed2:	0e 2e       	mov	r0, r30
     ed4:	3a f0       	brmi	.+14     	; 0xee4 <__divsf3_pse+0x3a>
     ed6:	e0 e8       	ldi	r30, 0x80	; 128
     ed8:	30 d0       	rcall	.+96     	; 0xf3a <__divsf3_pse+0x90>
     eda:	91 50       	subi	r25, 0x01	; 1
     edc:	50 40       	sbci	r21, 0x00	; 0
     ede:	e6 95       	lsr	r30
     ee0:	00 1c       	adc	r0, r0
     ee2:	ca f7       	brpl	.-14     	; 0xed6 <__divsf3_pse+0x2c>
     ee4:	29 d0       	rcall	.+82     	; 0xf38 <__divsf3_pse+0x8e>
     ee6:	fe 2f       	mov	r31, r30
     ee8:	27 d0       	rcall	.+78     	; 0xf38 <__divsf3_pse+0x8e>
     eea:	66 0f       	add	r22, r22
     eec:	77 1f       	adc	r23, r23
     eee:	88 1f       	adc	r24, r24
     ef0:	bb 1f       	adc	r27, r27
     ef2:	26 17       	cp	r18, r22
     ef4:	37 07       	cpc	r19, r23
     ef6:	48 07       	cpc	r20, r24
     ef8:	ab 07       	cpc	r26, r27
     efa:	b0 e8       	ldi	r27, 0x80	; 128
     efc:	09 f0       	breq	.+2      	; 0xf00 <__divsf3_pse+0x56>
     efe:	bb 0b       	sbc	r27, r27
     f00:	80 2d       	mov	r24, r0
     f02:	bf 01       	movw	r22, r30
     f04:	ff 27       	eor	r31, r31
     f06:	93 58       	subi	r25, 0x83	; 131
     f08:	5f 4f       	sbci	r21, 0xFF	; 255
     f0a:	2a f0       	brmi	.+10     	; 0xf16 <__divsf3_pse+0x6c>
     f0c:	9e 3f       	cpi	r25, 0xFE	; 254
     f0e:	51 05       	cpc	r21, r1
     f10:	68 f0       	brcs	.+26     	; 0xf2c <__divsf3_pse+0x82>
     f12:	92 c0       	rjmp	.+292    	; 0x1038 <__fp_inf>
     f14:	dc c0       	rjmp	.+440    	; 0x10ce <__fp_szero>
     f16:	5f 3f       	cpi	r21, 0xFF	; 255
     f18:	ec f3       	brlt	.-6      	; 0xf14 <__divsf3_pse+0x6a>
     f1a:	98 3e       	cpi	r25, 0xE8	; 232
     f1c:	dc f3       	brlt	.-10     	; 0xf14 <__divsf3_pse+0x6a>
     f1e:	86 95       	lsr	r24
     f20:	77 95       	ror	r23
     f22:	67 95       	ror	r22
     f24:	b7 95       	ror	r27
     f26:	f7 95       	ror	r31
     f28:	9f 5f       	subi	r25, 0xFF	; 255
     f2a:	c9 f7       	brne	.-14     	; 0xf1e <__divsf3_pse+0x74>
     f2c:	88 0f       	add	r24, r24
     f2e:	91 1d       	adc	r25, r1
     f30:	96 95       	lsr	r25
     f32:	87 95       	ror	r24
     f34:	97 f9       	bld	r25, 7
     f36:	08 95       	ret
     f38:	e1 e0       	ldi	r30, 0x01	; 1
     f3a:	66 0f       	add	r22, r22
     f3c:	77 1f       	adc	r23, r23
     f3e:	88 1f       	adc	r24, r24
     f40:	bb 1f       	adc	r27, r27
     f42:	62 17       	cp	r22, r18
     f44:	73 07       	cpc	r23, r19
     f46:	84 07       	cpc	r24, r20
     f48:	ba 07       	cpc	r27, r26
     f4a:	20 f0       	brcs	.+8      	; 0xf54 <__divsf3_pse+0xaa>
     f4c:	62 1b       	sub	r22, r18
     f4e:	73 0b       	sbc	r23, r19
     f50:	84 0b       	sbc	r24, r20
     f52:	ba 0b       	sbc	r27, r26
     f54:	ee 1f       	adc	r30, r30
     f56:	88 f7       	brcc	.-30     	; 0xf3a <__divsf3_pse+0x90>
     f58:	e0 95       	com	r30
     f5a:	08 95       	ret

00000f5c <__fixsfsi>:
     f5c:	04 d0       	rcall	.+8      	; 0xf66 <__fixunssfsi>
     f5e:	68 94       	set
     f60:	b1 11       	cpse	r27, r1
     f62:	b5 c0       	rjmp	.+362    	; 0x10ce <__fp_szero>
     f64:	08 95       	ret

00000f66 <__fixunssfsi>:
     f66:	98 d0       	rcall	.+304    	; 0x1098 <__fp_splitA>
     f68:	88 f0       	brcs	.+34     	; 0xf8c <__fixunssfsi+0x26>
     f6a:	9f 57       	subi	r25, 0x7F	; 127
     f6c:	90 f0       	brcs	.+36     	; 0xf92 <__fixunssfsi+0x2c>
     f6e:	b9 2f       	mov	r27, r25
     f70:	99 27       	eor	r25, r25
     f72:	b7 51       	subi	r27, 0x17	; 23
     f74:	a0 f0       	brcs	.+40     	; 0xf9e <__fixunssfsi+0x38>
     f76:	d1 f0       	breq	.+52     	; 0xfac <__fixunssfsi+0x46>
     f78:	66 0f       	add	r22, r22
     f7a:	77 1f       	adc	r23, r23
     f7c:	88 1f       	adc	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	1a f0       	brmi	.+6      	; 0xf88 <__fixunssfsi+0x22>
     f82:	ba 95       	dec	r27
     f84:	c9 f7       	brne	.-14     	; 0xf78 <__fixunssfsi+0x12>
     f86:	12 c0       	rjmp	.+36     	; 0xfac <__fixunssfsi+0x46>
     f88:	b1 30       	cpi	r27, 0x01	; 1
     f8a:	81 f0       	breq	.+32     	; 0xfac <__fixunssfsi+0x46>
     f8c:	9f d0       	rcall	.+318    	; 0x10cc <__fp_zero>
     f8e:	b1 e0       	ldi	r27, 0x01	; 1
     f90:	08 95       	ret
     f92:	9c c0       	rjmp	.+312    	; 0x10cc <__fp_zero>
     f94:	67 2f       	mov	r22, r23
     f96:	78 2f       	mov	r23, r24
     f98:	88 27       	eor	r24, r24
     f9a:	b8 5f       	subi	r27, 0xF8	; 248
     f9c:	39 f0       	breq	.+14     	; 0xfac <__fixunssfsi+0x46>
     f9e:	b9 3f       	cpi	r27, 0xF9	; 249
     fa0:	cc f3       	brlt	.-14     	; 0xf94 <__fixunssfsi+0x2e>
     fa2:	86 95       	lsr	r24
     fa4:	77 95       	ror	r23
     fa6:	67 95       	ror	r22
     fa8:	b3 95       	inc	r27
     faa:	d9 f7       	brne	.-10     	; 0xfa2 <__fixunssfsi+0x3c>
     fac:	3e f4       	brtc	.+14     	; 0xfbc <__fixunssfsi+0x56>
     fae:	90 95       	com	r25
     fb0:	80 95       	com	r24
     fb2:	70 95       	com	r23
     fb4:	61 95       	neg	r22
     fb6:	7f 4f       	sbci	r23, 0xFF	; 255
     fb8:	8f 4f       	sbci	r24, 0xFF	; 255
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	08 95       	ret

00000fbe <__floatunsisf>:
     fbe:	e8 94       	clt
     fc0:	09 c0       	rjmp	.+18     	; 0xfd4 <__floatsisf+0x12>

00000fc2 <__floatsisf>:
     fc2:	97 fb       	bst	r25, 7
     fc4:	3e f4       	brtc	.+14     	; 0xfd4 <__floatsisf+0x12>
     fc6:	90 95       	com	r25
     fc8:	80 95       	com	r24
     fca:	70 95       	com	r23
     fcc:	61 95       	neg	r22
     fce:	7f 4f       	sbci	r23, 0xFF	; 255
     fd0:	8f 4f       	sbci	r24, 0xFF	; 255
     fd2:	9f 4f       	sbci	r25, 0xFF	; 255
     fd4:	99 23       	and	r25, r25
     fd6:	a9 f0       	breq	.+42     	; 0x1002 <__floatsisf+0x40>
     fd8:	f9 2f       	mov	r31, r25
     fda:	96 e9       	ldi	r25, 0x96	; 150
     fdc:	bb 27       	eor	r27, r27
     fde:	93 95       	inc	r25
     fe0:	f6 95       	lsr	r31
     fe2:	87 95       	ror	r24
     fe4:	77 95       	ror	r23
     fe6:	67 95       	ror	r22
     fe8:	b7 95       	ror	r27
     fea:	f1 11       	cpse	r31, r1
     fec:	f8 cf       	rjmp	.-16     	; 0xfde <__floatsisf+0x1c>
     fee:	fa f4       	brpl	.+62     	; 0x102e <__floatsisf+0x6c>
     ff0:	bb 0f       	add	r27, r27
     ff2:	11 f4       	brne	.+4      	; 0xff8 <__floatsisf+0x36>
     ff4:	60 ff       	sbrs	r22, 0
     ff6:	1b c0       	rjmp	.+54     	; 0x102e <__floatsisf+0x6c>
     ff8:	6f 5f       	subi	r22, 0xFF	; 255
     ffa:	7f 4f       	sbci	r23, 0xFF	; 255
     ffc:	8f 4f       	sbci	r24, 0xFF	; 255
     ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    1000:	16 c0       	rjmp	.+44     	; 0x102e <__floatsisf+0x6c>
    1002:	88 23       	and	r24, r24
    1004:	11 f0       	breq	.+4      	; 0x100a <__floatsisf+0x48>
    1006:	96 e9       	ldi	r25, 0x96	; 150
    1008:	11 c0       	rjmp	.+34     	; 0x102c <__floatsisf+0x6a>
    100a:	77 23       	and	r23, r23
    100c:	21 f0       	breq	.+8      	; 0x1016 <__floatsisf+0x54>
    100e:	9e e8       	ldi	r25, 0x8E	; 142
    1010:	87 2f       	mov	r24, r23
    1012:	76 2f       	mov	r23, r22
    1014:	05 c0       	rjmp	.+10     	; 0x1020 <__floatsisf+0x5e>
    1016:	66 23       	and	r22, r22
    1018:	71 f0       	breq	.+28     	; 0x1036 <__floatsisf+0x74>
    101a:	96 e8       	ldi	r25, 0x86	; 134
    101c:	86 2f       	mov	r24, r22
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	60 e0       	ldi	r22, 0x00	; 0
    1022:	2a f0       	brmi	.+10     	; 0x102e <__floatsisf+0x6c>
    1024:	9a 95       	dec	r25
    1026:	66 0f       	add	r22, r22
    1028:	77 1f       	adc	r23, r23
    102a:	88 1f       	adc	r24, r24
    102c:	da f7       	brpl	.-10     	; 0x1024 <__floatsisf+0x62>
    102e:	88 0f       	add	r24, r24
    1030:	96 95       	lsr	r25
    1032:	87 95       	ror	r24
    1034:	97 f9       	bld	r25, 7
    1036:	08 95       	ret

00001038 <__fp_inf>:
    1038:	97 f9       	bld	r25, 7
    103a:	9f 67       	ori	r25, 0x7F	; 127
    103c:	80 e8       	ldi	r24, 0x80	; 128
    103e:	70 e0       	ldi	r23, 0x00	; 0
    1040:	60 e0       	ldi	r22, 0x00	; 0
    1042:	08 95       	ret

00001044 <__fp_nan>:
    1044:	9f ef       	ldi	r25, 0xFF	; 255
    1046:	80 ec       	ldi	r24, 0xC0	; 192
    1048:	08 95       	ret

0000104a <__fp_pscA>:
    104a:	00 24       	eor	r0, r0
    104c:	0a 94       	dec	r0
    104e:	16 16       	cp	r1, r22
    1050:	17 06       	cpc	r1, r23
    1052:	18 06       	cpc	r1, r24
    1054:	09 06       	cpc	r0, r25
    1056:	08 95       	ret

00001058 <__fp_pscB>:
    1058:	00 24       	eor	r0, r0
    105a:	0a 94       	dec	r0
    105c:	12 16       	cp	r1, r18
    105e:	13 06       	cpc	r1, r19
    1060:	14 06       	cpc	r1, r20
    1062:	05 06       	cpc	r0, r21
    1064:	08 95       	ret

00001066 <__fp_round>:
    1066:	09 2e       	mov	r0, r25
    1068:	03 94       	inc	r0
    106a:	00 0c       	add	r0, r0
    106c:	11 f4       	brne	.+4      	; 0x1072 <__fp_round+0xc>
    106e:	88 23       	and	r24, r24
    1070:	52 f0       	brmi	.+20     	; 0x1086 <__fp_round+0x20>
    1072:	bb 0f       	add	r27, r27
    1074:	40 f4       	brcc	.+16     	; 0x1086 <__fp_round+0x20>
    1076:	bf 2b       	or	r27, r31
    1078:	11 f4       	brne	.+4      	; 0x107e <__fp_round+0x18>
    107a:	60 ff       	sbrs	r22, 0
    107c:	04 c0       	rjmp	.+8      	; 0x1086 <__fp_round+0x20>
    107e:	6f 5f       	subi	r22, 0xFF	; 255
    1080:	7f 4f       	sbci	r23, 0xFF	; 255
    1082:	8f 4f       	sbci	r24, 0xFF	; 255
    1084:	9f 4f       	sbci	r25, 0xFF	; 255
    1086:	08 95       	ret

00001088 <__fp_split3>:
    1088:	57 fd       	sbrc	r21, 7
    108a:	90 58       	subi	r25, 0x80	; 128
    108c:	44 0f       	add	r20, r20
    108e:	55 1f       	adc	r21, r21
    1090:	59 f0       	breq	.+22     	; 0x10a8 <__fp_splitA+0x10>
    1092:	5f 3f       	cpi	r21, 0xFF	; 255
    1094:	71 f0       	breq	.+28     	; 0x10b2 <__fp_splitA+0x1a>
    1096:	47 95       	ror	r20

00001098 <__fp_splitA>:
    1098:	88 0f       	add	r24, r24
    109a:	97 fb       	bst	r25, 7
    109c:	99 1f       	adc	r25, r25
    109e:	61 f0       	breq	.+24     	; 0x10b8 <__fp_splitA+0x20>
    10a0:	9f 3f       	cpi	r25, 0xFF	; 255
    10a2:	79 f0       	breq	.+30     	; 0x10c2 <__fp_splitA+0x2a>
    10a4:	87 95       	ror	r24
    10a6:	08 95       	ret
    10a8:	12 16       	cp	r1, r18
    10aa:	13 06       	cpc	r1, r19
    10ac:	14 06       	cpc	r1, r20
    10ae:	55 1f       	adc	r21, r21
    10b0:	f2 cf       	rjmp	.-28     	; 0x1096 <__fp_split3+0xe>
    10b2:	46 95       	lsr	r20
    10b4:	f1 df       	rcall	.-30     	; 0x1098 <__fp_splitA>
    10b6:	08 c0       	rjmp	.+16     	; 0x10c8 <__fp_splitA+0x30>
    10b8:	16 16       	cp	r1, r22
    10ba:	17 06       	cpc	r1, r23
    10bc:	18 06       	cpc	r1, r24
    10be:	99 1f       	adc	r25, r25
    10c0:	f1 cf       	rjmp	.-30     	; 0x10a4 <__fp_splitA+0xc>
    10c2:	86 95       	lsr	r24
    10c4:	71 05       	cpc	r23, r1
    10c6:	61 05       	cpc	r22, r1
    10c8:	08 94       	sec
    10ca:	08 95       	ret

000010cc <__fp_zero>:
    10cc:	e8 94       	clt

000010ce <__fp_szero>:
    10ce:	bb 27       	eor	r27, r27
    10d0:	66 27       	eor	r22, r22
    10d2:	77 27       	eor	r23, r23
    10d4:	cb 01       	movw	r24, r22
    10d6:	97 f9       	bld	r25, 7
    10d8:	08 95       	ret

000010da <__itoa_ncheck>:
    10da:	bb 27       	eor	r27, r27
    10dc:	4a 30       	cpi	r20, 0x0A	; 10
    10de:	31 f4       	brne	.+12     	; 0x10ec <__itoa_ncheck+0x12>
    10e0:	99 23       	and	r25, r25
    10e2:	22 f4       	brpl	.+8      	; 0x10ec <__itoa_ncheck+0x12>
    10e4:	bd e2       	ldi	r27, 0x2D	; 45
    10e6:	90 95       	com	r25
    10e8:	81 95       	neg	r24
    10ea:	9f 4f       	sbci	r25, 0xFF	; 255
    10ec:	01 c0       	rjmp	.+2      	; 0x10f0 <__utoa_common>

000010ee <__utoa_ncheck>:
    10ee:	bb 27       	eor	r27, r27

000010f0 <__utoa_common>:
    10f0:	fb 01       	movw	r30, r22
    10f2:	55 27       	eor	r21, r21
    10f4:	aa 27       	eor	r26, r26
    10f6:	88 0f       	add	r24, r24
    10f8:	99 1f       	adc	r25, r25
    10fa:	aa 1f       	adc	r26, r26
    10fc:	a4 17       	cp	r26, r20
    10fe:	10 f0       	brcs	.+4      	; 0x1104 <__utoa_common+0x14>
    1100:	a4 1b       	sub	r26, r20
    1102:	83 95       	inc	r24
    1104:	50 51       	subi	r21, 0x10	; 16
    1106:	b9 f7       	brne	.-18     	; 0x10f6 <__utoa_common+0x6>
    1108:	a0 5d       	subi	r26, 0xD0	; 208
    110a:	aa 33       	cpi	r26, 0x3A	; 58
    110c:	08 f0       	brcs	.+2      	; 0x1110 <__utoa_common+0x20>
    110e:	a9 5d       	subi	r26, 0xD9	; 217
    1110:	a1 93       	st	Z+, r26
    1112:	00 97       	sbiw	r24, 0x00	; 0
    1114:	79 f7       	brne	.-34     	; 0x10f4 <__utoa_common+0x4>
    1116:	b1 11       	cpse	r27, r1
    1118:	b1 93       	st	Z+, r27
    111a:	11 92       	st	Z+, r1
    111c:	cb 01       	movw	r24, r22
    111e:	00 c0       	rjmp	.+0      	; 0x1120 <strrev>

00001120 <strrev>:
    1120:	dc 01       	movw	r26, r24
    1122:	fc 01       	movw	r30, r24
    1124:	67 2f       	mov	r22, r23
    1126:	71 91       	ld	r23, Z+
    1128:	77 23       	and	r23, r23
    112a:	e1 f7       	brne	.-8      	; 0x1124 <strrev+0x4>
    112c:	32 97       	sbiw	r30, 0x02	; 2
    112e:	04 c0       	rjmp	.+8      	; 0x1138 <strrev+0x18>
    1130:	7c 91       	ld	r23, X
    1132:	6d 93       	st	X+, r22
    1134:	70 83       	st	Z, r23
    1136:	62 91       	ld	r22, -Z
    1138:	ae 17       	cp	r26, r30
    113a:	bf 07       	cpc	r27, r31
    113c:	c8 f3       	brcs	.-14     	; 0x1130 <strrev+0x10>
    113e:	08 95       	ret

00001140 <_exit>:
    1140:	f8 94       	cli

00001142 <__stop_program>:
    1142:	ff cf       	rjmp	.-2      	; 0x1142 <__stop_program>
